<?xml version="1.0" encoding="utf-8"?>
<TestRun id="7b12cbf5-6c9d-4976-afa5-ed06d848abe0" name="Evan@THE-BIG-RIG 2023-08-09 20:57:00" runUser="THE-BIG-RIG\Evan" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2023-08-09T20:57:00.8440366-04:00" queuing="2023-08-09T20:57:00.8440370-04:00" start="2023-08-09T20:56:58.9836255-04:00" finish="2023-08-09T20:58:33.0460279-04:00" />
  <TestSettings name="default" id="98b2ca9a-17db-433c-baea-73f8554640de">
    <Deployment runDeploymentRoot="Evan_THE-BIG-RIG_2023-08-09_20_57_00" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="e35c5ac0-9b7f-4f1e-b1ac-9eeea43c4db8" testId="61dcfb39-11fa-e241-4f87-9ef81d7da35f" testName="QueryBuild" computerName="THE-BIG-RIG" duration="00:00:00.0005070" startTime="2023-08-09T20:57:01.3307355-04:00" endTime="2023-08-09T20:57:01.3312427-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e35c5ac0-9b7f-4f1e-b1ac-9eeea43c4db8">
      <Output>
        <StdOut>""Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId""</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9e548e52-c576-4e2a-8693-b3e925a28c0b" testId="45fe581a-79a6-d39d-38f9-646e4aefd98f" testName="Insert" computerName="THE-BIG-RIG" duration="00:00:00.0149250" startTime="2023-08-09T20:57:00.7428168-04:00" endTime="2023-08-09T20:57:00.7577418-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9e548e52-c576-4e2a-8693-b3e925a28c0b">
      <Output>
        <StdOut>Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "sqliteName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "2a1b1203-97b7-4183-be42-459a47141025"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:57:00 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ea519026-f0c5-48c0-93e9-a03c976dd00d" testId="f9346500-1cf3-80bd-8353-bd565d17466d" testName="Reader" computerName="THE-BIG-RIG" duration="00:00:00.0115270" startTime="2023-08-09T20:57:00.7765465-04:00" endTime="2023-08-09T20:57:00.7880734-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ea519026-f0c5-48c0-93e9-a03c976dd00d">
      <Output>
        <StdOut>Reading...&#xD;
Query being generated:&#xD;
&#xD;
select * from "Fact"&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
Error: Parameter count mismatch.</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f33a8a9e-0e10-47d3-a38e-9667f20704e8" testId="a90e932c-1181-7947-bd3f-cd4c26ae5c6c" testName="SelectWhere" computerName="THE-BIG-RIG" duration="00:00:00.0098400" startTime="2023-08-09T20:57:00.8135782-04:00" endTime="2023-08-09T20:57:00.8234174-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f33a8a9e-0e10-47d3-a38e-9667f20704e8">
      <Output>
        <StdOut>Selecting Where...&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where "maybeSomething" = 'true'&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
facts: Error: Object of type 'System.Int64' cannot be converted to type 'Microsoft.FSharp.Core.FSharpOption`1[System.Int64]'.</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5791efe4-b626-43bf-bf3d-3aa5d00a190c" testId="cc8f9a7d-2cf1-cea4-783c-8b829390949b" testName="TearDown" computerName="THE-BIG-RIG" duration="00:00:00.0009310" startTime="2023-08-09T20:57:00.8234335-04:00" endTime="2023-08-09T20:57:00.8243639-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5791efe4-b626-43bf-bf3d-3aa5d00a190c">
      <Output>
        <StdOut>Transaction: None</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f5917b65-b7e5-40db-a9fd-9e34fdb4b84b" testId="aa5ad89d-4386-4bbe-356e-11e72bf7130c" testName="SelectLimit" computerName="THE-BIG-RIG" duration="00:00:00.0096250" startTime="2023-08-09T20:57:00.8039361-04:00" endTime="2023-08-09T20:57:00.8135606-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f5917b65-b7e5-40db-a9fd-9e34fdb4b84b">
      <Output>
        <StdOut>Selecting All...&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" limit 5</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException : Object of type 'System.Int64' cannot be converted to type 'Microsoft.FSharp.Core.FSharpOption`1[System.Int64]'.</Message>
          <StackTrace>   at System.RuntimeType.CheckValue(Object&amp; value, ParameterCopyBackAction&amp; copyBack, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.MethodBase.CheckArguments(Span`1 copyOfParameters, IntPtr* byrefParameters, Span`1 shouldCopyBack, ReadOnlySpan`1 parameters, RuntimeType[] sigTypes, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.RuntimeConstructorInfo.InvokeWithManyArguments(RuntimeConstructorInfo ci, Int32 argCount, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at Microsoft.FSharp.Reflection.Impl.getRecordConstructor@1008.Invoke(Object[] args) in D:\a\_work\1\s\src\FSharp.Core\reflect.fs:line 1009&#xD;
   at Test.Orm.SelectLimit@107-39.Invoke(Object[] vals)&#xD;
   at Test.Orm.SelectLimit@107-48.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 107&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System.Collections.IEnumerator.MoveNext() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 530&#xD;
   at Test.Orm.SelectLimit@107-38.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 107&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System.Collections.IEnumerator.MoveNext() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 530&#xD;
   at Microsoft.FSharp.Collections.SeqModule.Iterate[T](FSharpFunc`2 action, IEnumerable`1 source) in D:\a\_work\1\s\src\FSharp.Core\seq.fs:line 631&#xD;
   at Test.Orm.Orm.SelectLimit() in C:\hcrd\FORM\Test\Orm.fs:line 109&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fa77c489-993f-48aa-bf16-b759cba5f541" testId="0fa2da76-10fd-3535-9c31-82a6b7dc1dc6" testName="Connect" computerName="THE-BIG-RIG" duration="00:00:00.0091290" startTime="2023-08-09T20:57:00.6352170-04:00" endTime="2023-08-09T20:57:00.6443047-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fa77c489-993f-48aa-bf16-b759cba5f541">
      <Output>
        <StdOut>Contest: "Data Source=./test.db;"</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="919e9998-7d7a-482a-a501-6975a6d08058" testId="17b58aeb-30c9-6964-6c40-fbab11cb0ed7" testName="UpdateWhere" computerName="THE-BIG-RIG" duration="00:00:00.0125040" startTime="2023-08-09T20:57:00.8731884-04:00" endTime="2023-08-09T20:57:00.8856915-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="919e9998-7d7a-482a-a501-6975a6d08058">
      <Output>
        <StdOut>Updating...&#xD;
columns to update: seq&#xD;
  [{ Index = 0&#xD;
     IsKey = false&#xD;
     IsIndex = true&#xD;
     JoinOn = Some ("SubFact", "factId")&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "indexId"&#xD;
     QuotedSqlName = ""indexId""&#xD;
     FSharpName = "indexId"&#xD;
     Type = System.Int64&#xD;
     PropertyInfo = Int64 indexId }; { Index = 2&#xD;
                                       IsKey = false&#xD;
                                       IsIndex = false&#xD;
                                       JoinOn = None&#xD;
                                       Source = ""Fact""&#xD;
                                       QuotedSource = ""Fact""&#xD;
                                       SqlName = "sqliteName"&#xD;
                                       QuotedSqlName = ""sqliteName""&#xD;
                                       FSharpName = "name"&#xD;
                                       Type = System.String&#xD;
                                       PropertyInfo = System.String name };&#xD;
   { Index = 3&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "timeStamp"&#xD;
     QuotedSqlName = ""timeStamp""&#xD;
     FSharpName = "timeStamp"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String timeStamp };&#xD;
   { Index = 4&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "specialChar"&#xD;
     QuotedSqlName = ""specialChar""&#xD;
     FSharpName = "specialChar"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String specialChar }; ...]&#xD;
Query being generated:&#xD;
&#xD;
update "Fact" set "indexId" = @indexId, "sqliteName" = @name, "timeStamp" = @timeStamp, "specialChar" = @specialChar, "maybeSomething" = @maybeSomething, "sometimesNothing" = @sometimesNothing, "biteSize" = @biteSize where "indexId" = 1&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
facts: 5</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="79534892-18ae-49f7-ad27-8d69f0fbc84b" testId="64ceac3b-985e-80aa-2ebd-593c0fcb65a1" testName="ReaderWithTransaction" computerName="THE-BIG-RIG" duration="00:00:30.1380500" startTime="2023-08-09T20:58:02.3220163-04:00" endTime="2023-08-09T20:58:32.4600665-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="79534892-18ae-49f7-ad27-8d69f0fbc84b">
      <Output>
        <StdOut>Reading...&#xD;
Exception when beginning transaction: Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 5: 'database is locked'.&#xD;
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)&#xD;
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader()&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteNonQuery()&#xD;
   at Microsoft.Data.Sqlite.SqliteConnectionExtensions.ExecuteNonQuery(SqliteConnection connection, String commandText, SqliteParameter[] parameters)&#xD;
   at Microsoft.Data.Sqlite.SqliteTransaction..ctor(SqliteConnection connection, IsolationLevel isolationLevel, Boolean deferred)&#xD;
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel, Boolean deferred)&#xD;
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel)&#xD;
   at Microsoft.Data.Sqlite.SqliteConnection.BeginDbTransaction(IsolationLevel isolationLevel)&#xD;
   at Test.Orm.OrmTransaction.ReaderWithTransaction() in C:\hcrd\FORM\Test\Orm.fs:line 390&#xD;
Query being generated:&#xD;
&#xD;
select * from "Fact"&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
seq []</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="48bb576d-88b4-48d8-aae0-b3b362d00c2e" testId="637f884a-918a-8683-bb6b-2e0f84146c18" testName="UpdateMany" computerName="THE-BIG-RIG" duration="00:00:00.0617270" startTime="2023-08-09T20:57:01.8572766-04:00" endTime="2023-08-09T20:57:01.9190034-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="48bb576d-88b4-48d8-aae0-b3b362d00c2e">
      <Output>
        <StdOut>Updating many...&#xD;
columns to update: seq&#xD;
  [{ Index = 0&#xD;
     IsKey = false&#xD;
     IsIndex = true&#xD;
     JoinOn = Some ("SubFact", "factId")&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "indexId"&#xD;
     QuotedSqlName = ""indexId""&#xD;
     FSharpName = "indexId"&#xD;
     Type = System.Int64&#xD;
     PropertyInfo = Int64 indexId }; { Index = 2&#xD;
                                       IsKey = false&#xD;
                                       IsIndex = false&#xD;
                                       JoinOn = None&#xD;
                                       Source = ""Fact""&#xD;
                                       QuotedSource = ""Fact""&#xD;
                                       SqlName = "psqlName"&#xD;
                                       QuotedSqlName = ""psqlName""&#xD;
                                       FSharpName = "name"&#xD;
                                       Type = System.String&#xD;
                                       PropertyInfo = System.String name };&#xD;
   { Index = 3&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "timeStamp"&#xD;
     QuotedSqlName = ""timeStamp""&#xD;
     FSharpName = "timeStamp"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String timeStamp };&#xD;
   { Index = 4&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "specialChar"&#xD;
     QuotedSqlName = ""specialChar""&#xD;
     FSharpName = "specialChar"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String specialChar }; ...]&#xD;
Query being generated:&#xD;
&#xD;
update "Fact" set "indexId" = @indexId, "psqlName" = @name, "timeStamp" = @timeStamp, "specialChar" = @specialChar, "maybeSomething" = @maybeSomething, "sometimesNothing" = @sometimesNothing, "biteSize" = @biteSize where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
Ok 2Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where id = 'a0a2d91e-3e2b-482e-a942-e520139874ce'</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException : Object of type 'System.Int32' cannot be converted to type 'Microsoft.FSharp.Core.FSharpOption`1[System.Int64]'.</Message>
          <StackTrace>   at System.RuntimeType.CheckValue(Object&amp; value, ParameterCopyBackAction&amp; copyBack, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.MethodBase.CheckArguments(Span`1 copyOfParameters, IntPtr* byrefParameters, Span`1 shouldCopyBack, ReadOnlySpan`1 parameters, RuntimeType[] sigTypes, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.RuntimeConstructorInfo.InvokeWithManyArguments(RuntimeConstructorInfo ci, Int32 argCount, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at Microsoft.FSharp.Reflection.Impl.getRecordConstructor@1008.Invoke(Object[] args) in D:\a\_work\1\s\src\FSharp.Core\reflect.fs:line 1009&#xD;
   at Test.Orm.evan@144-39.Invoke(Object[] vals)&#xD;
   at Test.Orm.evan@144-48.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 144&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System.Collections.IEnumerator.MoveNext() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 530&#xD;
   at Test.Orm.evan@144-38.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 144&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System.Collections.IEnumerator.MoveNext() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 530&#xD;
   at Microsoft.FSharp.Collections.SeqModule.Head[T](IEnumerable`1 source) in D:\a\_work\1\s\src\FSharp.Core\seq.fs:line 1690&#xD;
   at Test.Orm.Orm.UpdateMany() in C:\hcrd\FORM\Test\Orm.fs:line 149&#xD;
   at InvokeStub_Orm.UpdateMany(Object, Object, IntPtr*)&#xD;
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3d8323b8-f6bf-482a-8ad7-4f8b084e7ad9" testId="109960d2-3813-538d-c791-8f455002f0b6" testName="UpdateMany" computerName="THE-BIG-RIG" duration="00:00:00.0278710" startTime="2023-08-09T20:57:00.8452810-04:00" endTime="2023-08-09T20:57:00.8731511-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3d8323b8-f6bf-482a-8ad7-4f8b084e7ad9">
      <Output>
        <StdOut>Updating many...&#xD;
columns to update: seq&#xD;
  [{ Index = 0&#xD;
     IsKey = false&#xD;
     IsIndex = true&#xD;
     JoinOn = Some ("SubFact", "factId")&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "indexId"&#xD;
     QuotedSqlName = ""indexId""&#xD;
     FSharpName = "indexId"&#xD;
     Type = System.Int64&#xD;
     PropertyInfo = Int64 indexId }; { Index = 2&#xD;
                                       IsKey = false&#xD;
                                       IsIndex = false&#xD;
                                       JoinOn = None&#xD;
                                       Source = ""Fact""&#xD;
                                       QuotedSource = ""Fact""&#xD;
                                       SqlName = "sqliteName"&#xD;
                                       QuotedSqlName = ""sqliteName""&#xD;
                                       FSharpName = "name"&#xD;
                                       Type = System.String&#xD;
                                       PropertyInfo = System.String name };&#xD;
   { Index = 3&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "timeStamp"&#xD;
     QuotedSqlName = ""timeStamp""&#xD;
     FSharpName = "timeStamp"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String timeStamp };&#xD;
   { Index = 4&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "specialChar"&#xD;
     QuotedSqlName = ""specialChar""&#xD;
     FSharpName = "specialChar"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String specialChar }; ...]&#xD;
Query being generated:&#xD;
&#xD;
update "Fact" set "indexId" = @indexId, "sqliteName" = @name, "timeStamp" = @timeStamp, "specialChar" = @specialChar, "maybeSomething" = @maybeSomething, "sometimesNothing" = @sometimesNothing, "biteSize" = @biteSize where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
Ok 2Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where id = 'ae9787b0-9f5c-4c19-a3f9-36bfd18a2660'</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException : Object of type 'System.Int64' cannot be converted to type 'Microsoft.FSharp.Core.FSharpOption`1[System.Int64]'.</Message>
          <StackTrace>   at System.RuntimeType.CheckValue(Object&amp; value, ParameterCopyBackAction&amp; copyBack, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.MethodBase.CheckArguments(Span`1 copyOfParameters, IntPtr* byrefParameters, Span`1 shouldCopyBack, ReadOnlySpan`1 parameters, RuntimeType[] sigTypes, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.RuntimeConstructorInfo.InvokeWithManyArguments(RuntimeConstructorInfo ci, Int32 argCount, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at Microsoft.FSharp.Reflection.Impl.getRecordConstructor@1008.Invoke(Object[] args) in D:\a\_work\1\s\src\FSharp.Core\reflect.fs:line 1009&#xD;
   at Test.Orm.evan@144-39.Invoke(Object[] vals)&#xD;
   at Test.Orm.evan@144-48.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 144&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System.Collections.IEnumerator.MoveNext() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 530&#xD;
   at Test.Orm.evan@144-38.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 144&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System.Collections.IEnumerator.MoveNext() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 530&#xD;
   at Microsoft.FSharp.Collections.SeqModule.Head[T](IEnumerable`1 source) in D:\a\_work\1\s\src\FSharp.Core\seq.fs:line 1690&#xD;
   at Test.Orm.Orm.UpdateMany() in C:\hcrd\FORM\Test\Orm.fs:line 149&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cc66f60b-747e-467f-b333-e3c42bfbf8e7" testId="32e05ec3-148e-77cd-f32a-bea700e74b04" testName="TearDown" computerName="THE-BIG-RIG" duration="00:00:00.0002580" startTime="2023-08-09T20:57:01.7237327-04:00" endTime="2023-08-09T20:57:01.7239906-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cc66f60b-747e-467f-b333-e3c42bfbf8e7">
      <Output>
        <StdOut>Transaction: None</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f242229a-ccb1-437e-a408-d7fc5399b960" testId="e1d96324-45ef-45d2-544f-68bf57e5356c" testName="InsertUpdateSelect" computerName="THE-BIG-RIG" duration="00:00:00.1618040" startTime="2023-08-09T20:58:32.7004375-04:00" endTime="2023-08-09T20:58:32.8622414-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f242229a-ccb1-437e-a408-d7fc5399b960">
      <Output>
        <StdOut>Do we have a transaction? Some Npgsql.NpgsqlTransaction&#xD;
Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "psqlName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "9b133e28-5f16-44c8-8999-7f9bcfe6b91a"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:58:32 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"&#xD;
columns to update: seq&#xD;
  [{ Index = 0&#xD;
     IsKey = false&#xD;
     IsIndex = true&#xD;
     JoinOn = Some ("SubFact", "factId")&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "indexId"&#xD;
     QuotedSqlName = ""indexId""&#xD;
     FSharpName = "indexId"&#xD;
     Type = System.Int64&#xD;
     PropertyInfo = Int64 indexId }; { Index = 2&#xD;
                                       IsKey = false&#xD;
                                       IsIndex = false&#xD;
                                       JoinOn = None&#xD;
                                       Source = ""Fact""&#xD;
                                       QuotedSource = ""Fact""&#xD;
                                       SqlName = "psqlName"&#xD;
                                       QuotedSqlName = ""psqlName""&#xD;
                                       FSharpName = "name"&#xD;
                                       Type = System.String&#xD;
                                       PropertyInfo = System.String name };&#xD;
   { Index = 3&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "timeStamp"&#xD;
     QuotedSqlName = ""timeStamp""&#xD;
     FSharpName = "timeStamp"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String timeStamp };&#xD;
   { Index = 4&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "specialChar"&#xD;
     QuotedSqlName = ""specialChar""&#xD;
     FSharpName = "specialChar"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String specialChar }; ...]&#xD;
Query being generated:&#xD;
&#xD;
update "Fact" set "indexId" = @indexId, "psqlName" = @name, "timeStamp" = @timeStamp, "specialChar" = @specialChar, "maybeSomething" = @maybeSomething, "sometimesNothing" = @sometimesNothing, "biteSize" = @biteSize where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where id = '9b133e28-5f16-44c8-8999-7f9bcfe6b91a'</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException : Object of type 'System.Int32' cannot be converted to type 'Microsoft.FSharp.Core.FSharpOption`1[System.Int64]'.</Message>
          <StackTrace>   at System.RuntimeType.CheckValue(Object&amp; value, ParameterCopyBackAction&amp; copyBack, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.MethodBase.CheckArguments(Span`1 copyOfParameters, IntPtr* byrefParameters, Span`1 shouldCopyBack, ReadOnlySpan`1 parameters, RuntimeType[] sigTypes, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.RuntimeConstructorInfo.InvokeWithManyArguments(RuntimeConstructorInfo ci, Int32 argCount, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at Microsoft.FSharp.Reflection.Impl.getRecordConstructor@1008.Invoke(Object[] args) in D:\a\_work\1\s\src\FSharp.Core\reflect.fs:line 1009&#xD;
   at Test.Orm.Pipe #1 input at line 367@367-21.Invoke(Object[] vals)&#xD;
   at Test.Orm.Pipe #1 input at line 367@367-30.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 367&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Test.Orm.Pipe #1 input at line 367@367-20.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 367&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Collections.SeqModule.Length[T](IEnumerable`1 source) in D:\a\_work\1\s\src\FSharp.Core\seq.fs:line 899&#xD;
   at Test.Orm.Pipe #1 stage #2 at line 366@366.Invoke(Int32 _arg7) in C:\hcrd\FORM\Test\Orm.fs:line 369&#xD;
   at Test.Orm.OrmTransaction.InsertUpdateSelect() in C:\hcrd\FORM\Test\Orm.fs:line 366&#xD;
   at InvokeStub_OrmTransaction.InsertUpdateSelect(Object, Object, IntPtr*)&#xD;
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e1183116-fbf0-4290-aba6-6fb2d86c79a7" testId="5d408274-7e76-d306-80c5-5a9bfe39a193" testName="Connect" computerName="THE-BIG-RIG" duration="00:00:00.0004470" startTime="2023-08-09T20:57:01.1626567-04:00" endTime="2023-08-09T20:57:01.1631036-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e1183116-fbf0-4290-aba6-6fb2d86c79a7">
      <Output>
        <StdOut>Contest: "Data Source=./test.db;"</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="62a1993c-ca10-4ff3-90ca-e9ecd7f55cda" testId="3e7f6762-f253-2395-a98b-b7024bc8f76d" testName="InsertDeleteSelect" computerName="THE-BIG-RIG" duration="00:00:00.0241310" startTime="2023-08-09T20:57:02.0673669-04:00" endTime="2023-08-09T20:57:02.0914974-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="62a1993c-ca10-4ff3-90ca-e9ecd7f55cda">
      <Output>
        <StdOut>Do we have a transaction? Some Microsoft.Data.Sqlite.SqliteTransaction&#xD;
Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "sqliteName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "3def2353-c849-4747-a17a-757ea24ddc2b"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:57:02 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where id = '3def2353-c849-4747-a17a-757ea24ddc2b'</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5bee26a5-e59b-447e-abd3-174c05b7e237" testId="d8e33ed2-9bff-03c9-e97c-4b6122b57f5f" testName="Delete" computerName="THE-BIG-RIG" duration="00:00:00.0188970" startTime="2023-08-09T20:57:01.1631180-04:00" endTime="2023-08-09T20:57:01.1820148-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5bee26a5-e59b-447e-abd3-174c05b7e237">
      <Output>
        <StdOut>Deleting...&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
facts: 0</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1f137795-1d65-414a-a555-3d5d7293b202" testId="9914cd5e-0327-22a6-d447-faa2be9ff7a1" testName="DeleteWhere" computerName="THE-BIG-RIG" duration="00:00:00.0012250" startTime="2023-08-09T20:57:00.7415765-04:00" endTime="2023-08-09T20:57:00.7428017-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1f137795-1d65-414a-a555-3d5d7293b202">
      <Output>
        <StdOut>Deleting Where...&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "indexId" = 1&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
facts: 0</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e19c1740-2bd2-47d7-8243-0ecd20b9074b" testId="9efe28fc-5719-572e-16c6-a90cc0bb8bcd" testName="InsertMany" computerName="THE-BIG-RIG" duration="00:00:00.0113720" startTime="2023-08-09T20:57:00.7577654-04:00" endTime="2023-08-09T20:57:00.7691369-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e19c1740-2bd2-47d7-8243-0ecd20b9074b">
      <Output>
        <StdOut>Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "sqliteName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="24d888b9-8504-4f7f-b16b-ef449e150fd7" testId="4525c845-e5a6-179a-b7d8-7666e50f57e3" testName="InsertSelect" computerName="THE-BIG-RIG" duration="00:00:00.1476870" startTime="2023-08-09T20:58:32.5527326-04:00" endTime="2023-08-09T20:58:32.7004191-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="24d888b9-8504-4f7f-b16b-ef449e150fd7">
      <Output>
        <StdOut>Do we have a transaction? Some Npgsql.NpgsqlTransaction&#xD;
Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "psqlName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "dc56b1a7-3254-4146-8218-e4949c0b66fa"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:58:32 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where id = 'dc56b1a7-3254-4146-8218-e4949c0b66fa'</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException : Object of type 'System.Int32' cannot be converted to type 'Microsoft.FSharp.Core.FSharpOption`1[System.Int64]'.</Message>
          <StackTrace>   at System.RuntimeType.CheckValue(Object&amp; value, ParameterCopyBackAction&amp; copyBack, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.MethodBase.CheckArguments(Span`1 copyOfParameters, IntPtr* byrefParameters, Span`1 shouldCopyBack, ReadOnlySpan`1 parameters, RuntimeType[] sigTypes, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.RuntimeConstructorInfo.InvokeWithManyArguments(RuntimeConstructorInfo ci, Int32 argCount, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at Microsoft.FSharp.Reflection.Impl.getRecordConstructor@1008.Invoke(Object[] args) in D:\a\_work\1\s\src\FSharp.Core\reflect.fs:line 1009&#xD;
   at Test.Orm.Pipe #1 input at line 304@304-21.Invoke(Object[] vals)&#xD;
   at Test.Orm.Pipe #1 input at line 304@304-30.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 304&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Test.Orm.Pipe #1 input at line 304@304-20.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 304&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Collections.SeqModule.Length[T](IEnumerable`1 source) in D:\a\_work\1\s\src\FSharp.Core\seq.fs:line 899&#xD;
   at Test.Orm.Pipe #1 stage #1 at line 303@303.Invoke(Int32 _arg1) in C:\hcrd\FORM\Test\Orm.fs:line 306&#xD;
   at Test.Orm.OrmTransaction.InsertSelect() in C:\hcrd\FORM\Test\Orm.fs:line 303&#xD;
   at InvokeStub_OrmTransaction.InsertSelect(Object, Object, IntPtr*)&#xD;
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="958af6f4-d3b5-4cb0-98d0-e9dd12e02f2a" testId="644b827d-b769-3bd3-ee9c-d9b3a6561434" testName="SelectLimit" computerName="THE-BIG-RIG" duration="00:00:00.1229220" startTime="2023-08-09T20:57:01.4697521-04:00" endTime="2023-08-09T20:57:01.5926741-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="958af6f4-d3b5-4cb0-98d0-e9dd12e02f2a">
      <Output>
        <StdOut>Selecting All...&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" limit 5</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException : Object of type 'System.Int32' cannot be converted to type 'Microsoft.FSharp.Core.FSharpOption`1[System.Int64]'.</Message>
          <StackTrace>   at System.RuntimeType.CheckValue(Object&amp; value, ParameterCopyBackAction&amp; copyBack, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.MethodBase.CheckArguments(Span`1 copyOfParameters, IntPtr* byrefParameters, Span`1 shouldCopyBack, ReadOnlySpan`1 parameters, RuntimeType[] sigTypes, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.RuntimeConstructorInfo.InvokeWithManyArguments(RuntimeConstructorInfo ci, Int32 argCount, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at Microsoft.FSharp.Reflection.Impl.getRecordConstructor@1008.Invoke(Object[] args) in D:\a\_work\1\s\src\FSharp.Core\reflect.fs:line 1009&#xD;
   at Test.Orm.SelectLimit@107-39.Invoke(Object[] vals)&#xD;
   at Test.Orm.SelectLimit@107-48.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 107&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System.Collections.IEnumerator.MoveNext() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 530&#xD;
   at Test.Orm.SelectLimit@107-38.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 107&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System.Collections.IEnumerator.MoveNext() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 530&#xD;
   at Microsoft.FSharp.Collections.SeqModule.Iterate[T](FSharpFunc`2 action, IEnumerable`1 source) in D:\a\_work\1\s\src\FSharp.Core\seq.fs:line 631&#xD;
   at Test.Orm.Orm.SelectLimit() in C:\hcrd\FORM\Test\Orm.fs:line 109&#xD;
   at InvokeStub_Orm.SelectLimit(Object, Object, IntPtr*)&#xD;
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="d0392b65-7177-4448-a0b5-98f04b2c1a8b" testId="36c067cb-46f5-9f5c-c278-1bb2ce6e133f" testName="InsertUpdateSelect" computerName="THE-BIG-RIG" duration="00:01:00.2140490" startTime="2023-08-09T20:57:02.1077689-04:00" endTime="2023-08-09T20:58:02.3218180-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="d0392b65-7177-4448-a0b5-98f04b2c1a8b">
      <Output>
        <StdOut>Exception when beginning transaction: Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 5: 'database is locked'.&#xD;
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)&#xD;
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader()&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteNonQuery()&#xD;
   at Microsoft.Data.Sqlite.SqliteConnectionExtensions.ExecuteNonQuery(SqliteConnection connection, String commandText, SqliteParameter[] parameters)&#xD;
   at Microsoft.Data.Sqlite.SqliteTransaction..ctor(SqliteConnection connection, IsolationLevel isolationLevel, Boolean deferred)&#xD;
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel, Boolean deferred)&#xD;
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel)&#xD;
   at Microsoft.Data.Sqlite.SqliteConnection.BeginDbTransaction(IsolationLevel isolationLevel)&#xD;
   at Test.Orm.OrmTransaction.InsertUpdateSelect() in C:\hcrd\FORM\Test\Orm.fs:line 357&#xD;
Do we have a transaction? None&#xD;
Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "sqliteName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "58f6e65d-2822-4987-a260-6bb2806b8309"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:57:32 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"</StdOut>
        <ErrorInfo>
          <Message>Microsoft.Data.Sqlite.SqliteException : SQLite Error 5: 'database is locked'.</Message>
          <StackTrace>   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)&#xD;
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader()&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteNonQuery()&#xD;
   at Test.Orm.Pipe #1 input at line 364@364-33.Invoke(DbConnection connection)&#xD;
   at Microsoft.FSharp.Core.ResultModule.Map[T,TResult,TError](FSharpFunc`2 mapping, FSharpResult`2 result) in D:\a\_work\1\s\src\FSharp.Core\result.fs:line 12&#xD;
   at Test.Orm.OrmTransaction.InsertUpdateSelect() in C:\hcrd\FORM\Test\Orm.fs:line 364&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="7167c810-374b-4bd3-976d-c0f9c5798d36" testId="6f25e22c-fb80-3b16-8268-1639c4107ef2" testName="DeleteWhere" computerName="THE-BIG-RIG" duration="00:00:00.0135810" startTime="2023-08-09T20:57:01.2278070-04:00" endTime="2023-08-09T20:57:01.2413871-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="7167c810-374b-4bd3-976d-c0f9c5798d36">
      <Output>
        <StdOut>Deleting Where...&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "indexId" = 1&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
facts: 0</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b7e53595-2183-45b6-8592-b02b6081fbb1" testId="685fd3d2-6ac3-c066-f340-f935822e65eb" testName="Update" computerName="THE-BIG-RIG" duration="00:00:00.0208780" startTime="2023-08-09T20:57:00.8243774-04:00" endTime="2023-08-09T20:57:00.8452545-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b7e53595-2183-45b6-8592-b02b6081fbb1">
      <Output>
        <StdOut>Updating...&#xD;
columns to update: seq&#xD;
  [{ Index = 0&#xD;
     IsKey = false&#xD;
     IsIndex = true&#xD;
     JoinOn = Some ("SubFact", "factId")&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "indexId"&#xD;
     QuotedSqlName = ""indexId""&#xD;
     FSharpName = "indexId"&#xD;
     Type = System.Int64&#xD;
     PropertyInfo = Int64 indexId }; { Index = 2&#xD;
                                       IsKey = false&#xD;
                                       IsIndex = false&#xD;
                                       JoinOn = None&#xD;
                                       Source = ""Fact""&#xD;
                                       QuotedSource = ""Fact""&#xD;
                                       SqlName = "sqliteName"&#xD;
                                       QuotedSqlName = ""sqliteName""&#xD;
                                       FSharpName = "name"&#xD;
                                       Type = System.String&#xD;
                                       PropertyInfo = System.String name };&#xD;
   { Index = 3&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "timeStamp"&#xD;
     QuotedSqlName = ""timeStamp""&#xD;
     FSharpName = "timeStamp"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String timeStamp };&#xD;
   { Index = 4&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "specialChar"&#xD;
     QuotedSqlName = ""specialChar""&#xD;
     FSharpName = "specialChar"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String specialChar }; ...]&#xD;
Query being generated:&#xD;
&#xD;
update "Fact" set "indexId" = @indexId, "sqliteName" = @name, "timeStamp" = @timeStamp, "specialChar" = @specialChar, "maybeSomething" = @maybeSomething, "sometimesNothing" = @sometimesNothing, "biteSize" = @biteSize where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
facts: 1</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="df57388c-cf23-4d4f-8495-7904d26edbf6" testId="d9987b9d-24a0-d4c4-e4b0-295b5a496f9c" testName="Select" computerName="THE-BIG-RIG" duration="00:00:00.1185930" startTime="2023-08-09T20:57:01.3511366-04:00" endTime="2023-08-09T20:57:01.4697295-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="df57388c-cf23-4d4f-8495-7904d26edbf6">
      <Output>
        <StdOut>Selecting All...&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId"</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException : Object of type 'System.Int32' cannot be converted to type 'Microsoft.FSharp.Core.FSharpOption`1[System.Int64]'.</Message>
          <StackTrace>   at System.RuntimeType.CheckValue(Object&amp; value, ParameterCopyBackAction&amp; copyBack, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.MethodBase.CheckArguments(Span`1 copyOfParameters, IntPtr* byrefParameters, Span`1 shouldCopyBack, ReadOnlySpan`1 parameters, RuntimeType[] sigTypes, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.RuntimeConstructorInfo.InvokeWithManyArguments(RuntimeConstructorInfo ci, Int32 argCount, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at Microsoft.FSharp.Reflection.Impl.getRecordConstructor@1008.Invoke(Object[] args) in D:\a\_work\1\s\src\FSharp.Core\reflect.fs:line 1009&#xD;
   at Test.Orm.Select@97-39.Invoke(Object[] vals)&#xD;
   at Test.Orm.Select@97-48.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 97&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System.Collections.IEnumerator.MoveNext() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 530&#xD;
   at Test.Orm.Select@97-38.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 97&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System.Collections.IEnumerator.MoveNext() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 530&#xD;
   at Microsoft.FSharp.Collections.SeqModule.Iterate[T](FSharpFunc`2 action, IEnumerable`1 source) in D:\a\_work\1\s\src\FSharp.Core\seq.fs:line 631&#xD;
   at Test.Orm.Orm.Select() in C:\hcrd\FORM\Test\Orm.fs:line 99&#xD;
   at InvokeStub_Orm.Select(Object, Object, IntPtr*)&#xD;
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9fbe3870-8850-49aa-9d25-8c525de35687" testId="56e96ce4-50b6-5365-cfd5-b3ce8ae0fd29" testName="InsertSelect" computerName="THE-BIG-RIG" duration="00:00:00.0162350" startTime="2023-08-09T20:57:02.0915144-04:00" endTime="2023-08-09T20:57:02.1077494-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9fbe3870-8850-49aa-9d25-8c525de35687">
      <Output>
        <StdOut>Do we have a transaction? Some Microsoft.Data.Sqlite.SqliteTransaction&#xD;
Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "sqliteName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "be89970e-1d22-4da3-ae44-8eaa9cb060fd"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:57:02 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where id = 'be89970e-1d22-4da3-ae44-8eaa9cb060fd'</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException : Object of type 'System.Int64' cannot be converted to type 'Microsoft.FSharp.Core.FSharpOption`1[System.Int64]'.</Message>
          <StackTrace>   at System.RuntimeType.CheckValue(Object&amp; value, ParameterCopyBackAction&amp; copyBack, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.MethodBase.CheckArguments(Span`1 copyOfParameters, IntPtr* byrefParameters, Span`1 shouldCopyBack, ReadOnlySpan`1 parameters, RuntimeType[] sigTypes, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.RuntimeConstructorInfo.InvokeWithManyArguments(RuntimeConstructorInfo ci, Int32 argCount, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at Microsoft.FSharp.Reflection.Impl.getRecordConstructor@1008.Invoke(Object[] args) in D:\a\_work\1\s\src\FSharp.Core\reflect.fs:line 1009&#xD;
   at Test.Orm.Pipe #1 input at line 304@304-21.Invoke(Object[] vals)&#xD;
   at Test.Orm.Pipe #1 input at line 304@304-30.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 304&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Test.Orm.Pipe #1 input at line 304@304-20.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 304&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Collections.SeqModule.Length[T](IEnumerable`1 source) in D:\a\_work\1\s\src\FSharp.Core\seq.fs:line 899&#xD;
   at Test.Orm.Pipe #1 stage #1 at line 303@303.Invoke(Int32 _arg1) in C:\hcrd\FORM\Test\Orm.fs:line 306&#xD;
   at Test.Orm.OrmTransaction.InsertSelect() in C:\hcrd\FORM\Test\Orm.fs:line 303&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="455742d3-e0e7-452b-a418-dae6ef5a5cc8" testId="85caf85c-0ea4-3061-d9ac-49e696c000d2" testName="Insert" computerName="THE-BIG-RIG" duration="00:00:00.0173320" startTime="2023-08-09T20:57:01.2414083-04:00" endTime="2023-08-09T20:57:01.2587396-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="455742d3-e0e7-452b-a418-dae6ef5a5cc8">
      <Output>
        <StdOut>Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "psqlName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "f27036be-46c0-4cd8-968a-c57205a9fe5f"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:57:01 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="348ad010-b67d-4f94-9ab2-053ddd820990" testId="d73ca3dd-6f0d-02ae-9b15-97da40bf6710" testName="InsertDeleteSelect" computerName="THE-BIG-RIG" duration="00:00:00.0619200" startTime="2023-08-09T20:58:32.4907958-04:00" endTime="2023-08-09T20:58:32.5527155-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="348ad010-b67d-4f94-9ab2-053ddd820990">
      <Output>
        <StdOut>Do we have a transaction? Some Npgsql.NpgsqlTransaction&#xD;
Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "psqlName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "a4a3f2a4-34a1-4d2d-8a50-50acbe48787d"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:58:32 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where id = 'a4a3f2a4-34a1-4d2d-8a50-50acbe48787d'</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f654feb7-457b-4866-b5c2-09643f739975" testId="45a1c35a-206a-680b-7adf-97b4f1220fb1" testName="Reader" computerName="THE-BIG-RIG" duration="00:00:00.0198170" startTime="2023-08-09T20:57:01.3312526-04:00" endTime="2023-08-09T20:57:01.3510690-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f654feb7-457b-4866-b5c2-09643f739975">
      <Output>
        <StdOut>Reading...&#xD;
Query being generated:&#xD;
&#xD;
select * from "Fact"&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
Error: Parameter count mismatch.</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="9bfef608-207f-4385-bc81-b140f769f55f" testId="40146aef-5e24-931c-f935-d8cb1c2a1a7b" testName="DeleteMany" computerName="THE-BIG-RIG" duration="00:00:00.0123070" startTime="2023-08-09T20:57:00.7292473-04:00" endTime="2023-08-09T20:57:00.7415535-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="9bfef608-207f-4385-bc81-b140f769f55f">
      <Output>
        <StdOut>Deleting Many...&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
0</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2a2907de-224d-44b5-9537-c45ef7f4dbfc" testId="703d9e23-b2da-ec05-d434-5d080ae77160" testName="SelectWhere" computerName="THE-BIG-RIG" duration="00:00:00.1300440" startTime="2023-08-09T20:57:01.5936683-04:00" endTime="2023-08-09T20:57:01.7237122-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2a2907de-224d-44b5-9537-c45ef7f4dbfc">
      <Output>
        <StdOut>Selecting Where...&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where "maybeSomething" = 'true'&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
facts: Error: Object of type 'System.Int32' cannot be converted to type 'Microsoft.FSharp.Core.FSharpOption`1[System.Int64]'.</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="fce7754e-503a-43d8-8508-73b85558a465" testId="9798df95-32ca-8c71-56f5-d297f4317542" testName="ReaderWithTransaction" computerName="THE-BIG-RIG" duration="00:00:00.1375130" startTime="2023-08-09T20:58:32.8622601-04:00" endTime="2023-08-09T20:58:32.9997731-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="fce7754e-503a-43d8-8508-73b85558a465">
      <Output>
        <StdOut>Reading...&#xD;
Query being generated:&#xD;
&#xD;
select * from "Fact"&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
seq []</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="51974415-2819-499e-9371-c4e537c05e79" testId="49a6d652-58bf-e834-bc8e-37de72d62c3c" testName="Delete" computerName="THE-BIG-RIG" duration="00:00:00.0839640" startTime="2023-08-09T20:57:00.6452426-04:00" endTime="2023-08-09T20:57:00.7292060-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="51974415-2819-499e-9371-c4e537c05e79">
      <Output>
        <StdOut>Deleting...&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
facts: 0</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="13ef694c-61fa-4e6f-be85-bbd685071fec" testId="04fe663e-77f4-7638-3d23-56ab2a11f452" testName="Update" computerName="THE-BIG-RIG" duration="00:00:00.1332550" startTime="2023-08-09T20:57:01.7239998-04:00" endTime="2023-08-09T20:57:01.8572549-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="13ef694c-61fa-4e6f-be85-bbd685071fec">
      <Output>
        <StdOut>Updating...&#xD;
columns to update: seq&#xD;
  [{ Index = 0&#xD;
     IsKey = false&#xD;
     IsIndex = true&#xD;
     JoinOn = Some ("SubFact", "factId")&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "indexId"&#xD;
     QuotedSqlName = ""indexId""&#xD;
     FSharpName = "indexId"&#xD;
     Type = System.Int64&#xD;
     PropertyInfo = Int64 indexId }; { Index = 2&#xD;
                                       IsKey = false&#xD;
                                       IsIndex = false&#xD;
                                       JoinOn = None&#xD;
                                       Source = ""Fact""&#xD;
                                       QuotedSource = ""Fact""&#xD;
                                       SqlName = "psqlName"&#xD;
                                       QuotedSqlName = ""psqlName""&#xD;
                                       FSharpName = "name"&#xD;
                                       Type = System.String&#xD;
                                       PropertyInfo = System.String name };&#xD;
   { Index = 3&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "timeStamp"&#xD;
     QuotedSqlName = ""timeStamp""&#xD;
     FSharpName = "timeStamp"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String timeStamp };&#xD;
   { Index = 4&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "specialChar"&#xD;
     QuotedSqlName = ""specialChar""&#xD;
     FSharpName = "specialChar"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String specialChar }; ...]&#xD;
Query being generated:&#xD;
&#xD;
update "Fact" set "indexId" = @indexId, "psqlName" = @name, "timeStamp" = @timeStamp, "specialChar" = @specialChar, "maybeSomething" = @maybeSomething, "sometimesNothing" = @sometimesNothing, "biteSize" = @biteSize where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
facts: 1</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="10ed324a-4183-48ec-a2c2-e0ac9483daa9" testId="808acbda-4118-700a-9ab5-75ef8abf7449" testName="InsertMany" computerName="THE-BIG-RIG" duration="00:00:00.0719540" startTime="2023-08-09T20:57:01.2587590-04:00" endTime="2023-08-09T20:57:01.3307120-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="10ed324a-4183-48ec-a2c2-e0ac9483daa9">
      <Output>
        <StdOut>Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "psqlName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b011824f-9a49-4940-85a6-617af0894747" testId="53d2384a-fbb2-a413-58be-1fd0675167cd" testName="Select" computerName="THE-BIG-RIG" duration="00:00:00.0157379" startTime="2023-08-09T20:57:00.7880933-04:00" endTime="2023-08-09T20:57:00.8038311-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b011824f-9a49-4940-85a6-617af0894747">
      <Output>
        <StdOut>Selecting All...&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId"</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException : Object of type 'System.Int64' cannot be converted to type 'Microsoft.FSharp.Core.FSharpOption`1[System.Int64]'.</Message>
          <StackTrace>   at System.RuntimeType.CheckValue(Object&amp; value, ParameterCopyBackAction&amp; copyBack, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.MethodBase.CheckArguments(Span`1 copyOfParameters, IntPtr* byrefParameters, Span`1 shouldCopyBack, ReadOnlySpan`1 parameters, RuntimeType[] sigTypes, Binder binder, CultureInfo culture, BindingFlags invokeAttr)&#xD;
   at System.Reflection.RuntimeConstructorInfo.InvokeWithManyArguments(RuntimeConstructorInfo ci, Int32 argCount, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)&#xD;
   at Microsoft.FSharp.Reflection.Impl.getRecordConstructor@1008.Invoke(Object[] args) in D:\a\_work\1\s\src\FSharp.Core\reflect.fs:line 1009&#xD;
   at Test.Orm.Select@97-39.Invoke(Object[] vals)&#xD;
   at Test.Orm.Select@97-48.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 97&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System.Collections.IEnumerator.MoveNext() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 530&#xD;
   at Test.Orm.Select@97-38.GenerateNext(IEnumerable`1&amp; next) in C:\hcrd\FORM\Test\Orm.fs:line 97&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.MoveNextImpl() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 488&#xD;
   at Microsoft.FSharp.Core.CompilerServices.GeneratedSequenceBase`1.System.Collections.IEnumerator.MoveNext() in D:\a\_work\1\s\src\FSharp.Core\seqcore.fs:line 530&#xD;
   at Microsoft.FSharp.Collections.SeqModule.Iterate[T](FSharpFunc`2 action, IEnumerable`1 source) in D:\a\_work\1\s\src\FSharp.Core\seq.fs:line 631&#xD;
   at Test.Orm.Orm.Select() in C:\hcrd\FORM\Test\Orm.fs:line 99&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="884fcd25-2894-405f-b57e-861cb9b96072" testId="b2ee8ff5-43fd-9922-0a20-e7fbb2d8497e" testName="UpdateWhere" computerName="THE-BIG-RIG" duration="00:00:00.1409690" startTime="2023-08-09T20:57:01.9194317-04:00" endTime="2023-08-09T20:57:02.0604007-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="884fcd25-2894-405f-b57e-861cb9b96072">
      <Output>
        <StdOut>Updating...&#xD;
columns to update: seq&#xD;
  [{ Index = 0&#xD;
     IsKey = false&#xD;
     IsIndex = true&#xD;
     JoinOn = Some ("SubFact", "factId")&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "indexId"&#xD;
     QuotedSqlName = ""indexId""&#xD;
     FSharpName = "indexId"&#xD;
     Type = System.Int64&#xD;
     PropertyInfo = Int64 indexId }; { Index = 2&#xD;
                                       IsKey = false&#xD;
                                       IsIndex = false&#xD;
                                       JoinOn = None&#xD;
                                       Source = ""Fact""&#xD;
                                       QuotedSource = ""Fact""&#xD;
                                       SqlName = "psqlName"&#xD;
                                       QuotedSqlName = ""psqlName""&#xD;
                                       FSharpName = "name"&#xD;
                                       Type = System.String&#xD;
                                       PropertyInfo = System.String name };&#xD;
   { Index = 3&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "timeStamp"&#xD;
     QuotedSqlName = ""timeStamp""&#xD;
     FSharpName = "timeStamp"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String timeStamp };&#xD;
   { Index = 4&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "specialChar"&#xD;
     QuotedSqlName = ""specialChar""&#xD;
     FSharpName = "specialChar"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String specialChar }; ...]&#xD;
Query being generated:&#xD;
&#xD;
update "Fact" set "indexId" = @indexId, "psqlName" = @name, "timeStamp" = @timeStamp, "specialChar" = @specialChar, "maybeSomething" = @maybeSomething, "sometimesNothing" = @sometimesNothing, "biteSize" = @biteSize where "indexId" = 1&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
facts: 5</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="de0b108a-d243-4270-a661-d8272fe46779" testId="9c5af40b-4e18-c869-7f11-c793b0cd45f9" testName="QueryBuild" computerName="THE-BIG-RIG" duration="00:00:00.0073660" startTime="2023-08-09T20:57:00.7691591-04:00" endTime="2023-08-09T20:57:00.7765243-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="de0b108a-d243-4270-a661-d8272fe46779">
      <Output>
        <StdOut>""Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId""</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="339a11bf-9164-47d9-afae-f97395c7acc9" testId="15e7aaf0-1e10-0c65-15f8-df3a9c6f37ce" testName="DeleteMany" computerName="THE-BIG-RIG" duration="00:00:00.0457430" startTime="2023-08-09T20:57:01.1820406-04:00" endTime="2023-08-09T20:57:01.2277836-04:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="339a11bf-9164-47d9-afae-f97395c7acc9">
      <Output>
        <StdOut>Deleting Many...&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
0</StdOut>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="UpdateMany" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="637f884a-918a-8683-bb6b-2e0f84146c18">
      <Execution id="48bb576d-88b4-48d8-aae0-b3b362d00c2e" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="UpdateMany" />
    </UnitTest>
    <UnitTest name="SelectLimit" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="aa5ad89d-4386-4bbe-356e-11e72bf7130c">
      <Execution id="f5917b65-b7e5-40db-a9fd-9e34fdb4b84b" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="SelectLimit" />
    </UnitTest>
    <UnitTest name="DeleteMany" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="40146aef-5e24-931c-f935-d8cb1c2a1a7b">
      <Execution id="9bfef608-207f-4385-bc81-b140f769f55f" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="DeleteMany" />
    </UnitTest>
    <UnitTest name="ReaderWithTransaction" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="64ceac3b-985e-80aa-2ebd-593c0fcb65a1">
      <Execution id="79534892-18ae-49f7-ad27-8d69f0fbc84b" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+OrmTransaction(Test.Orm+get_Source@10-1)" name="ReaderWithTransaction" />
    </UnitTest>
    <UnitTest name="Delete" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="d8e33ed2-9bff-03c9-e97c-4b6122b57f5f">
      <Execution id="5bee26a5-e59b-447e-abd3-174c05b7e237" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="Delete" />
    </UnitTest>
    <UnitTest name="SelectWhere" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="a90e932c-1181-7947-bd3f-cd4c26ae5c6c">
      <Execution id="f33a8a9e-0e10-47d3-a38e-9667f20704e8" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="SelectWhere" />
    </UnitTest>
    <UnitTest name="InsertSelect" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="56e96ce4-50b6-5365-cfd5-b3ce8ae0fd29">
      <Execution id="9fbe3870-8850-49aa-9d25-8c525de35687" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+OrmTransaction(Test.Orm+get_Source@10-1)" name="InsertSelect" />
    </UnitTest>
    <UnitTest name="Insert" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="85caf85c-0ea4-3061-d9ac-49e696c000d2">
      <Execution id="455742d3-e0e7-452b-a418-dae6ef5a5cc8" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="Insert" />
    </UnitTest>
    <UnitTest name="UpdateWhere" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="b2ee8ff5-43fd-9922-0a20-e7fbb2d8497e">
      <Execution id="884fcd25-2894-405f-b57e-861cb9b96072" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="UpdateWhere" />
    </UnitTest>
    <UnitTest name="SelectWhere" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="703d9e23-b2da-ec05-d434-5d080ae77160">
      <Execution id="2a2907de-224d-44b5-9537-c45ef7f4dbfc" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="SelectWhere" />
    </UnitTest>
    <UnitTest name="DeleteWhere" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="9914cd5e-0327-22a6-d447-faa2be9ff7a1">
      <Execution id="1f137795-1d65-414a-a555-3d5d7293b202" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="DeleteWhere" />
    </UnitTest>
    <UnitTest name="SelectLimit" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="644b827d-b769-3bd3-ee9c-d9b3a6561434">
      <Execution id="958af6f4-d3b5-4cb0-98d0-e9dd12e02f2a" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="SelectLimit" />
    </UnitTest>
    <UnitTest name="UpdateWhere" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="17b58aeb-30c9-6964-6c40-fbab11cb0ed7">
      <Execution id="919e9998-7d7a-482a-a501-6975a6d08058" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="UpdateWhere" />
    </UnitTest>
    <UnitTest name="Reader" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="f9346500-1cf3-80bd-8353-bd565d17466d">
      <Execution id="ea519026-f0c5-48c0-93e9-a03c976dd00d" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="Reader" />
    </UnitTest>
    <UnitTest name="Update" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="04fe663e-77f4-7638-3d23-56ab2a11f452">
      <Execution id="13ef694c-61fa-4e6f-be85-bbd685071fec" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="Update" />
    </UnitTest>
    <UnitTest name="Update" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="685fd3d2-6ac3-c066-f340-f935822e65eb">
      <Execution id="b7e53595-2183-45b6-8592-b02b6081fbb1" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="Update" />
    </UnitTest>
    <UnitTest name="QueryBuild" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="9c5af40b-4e18-c869-7f11-c793b0cd45f9">
      <Execution id="de0b108a-d243-4270-a661-d8272fe46779" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="QueryBuild" />
    </UnitTest>
    <UnitTest name="TearDown" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="32e05ec3-148e-77cd-f32a-bea700e74b04">
      <Execution id="cc66f60b-747e-467f-b333-e3c42bfbf8e7" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="TearDown" />
    </UnitTest>
    <UnitTest name="Insert" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="45fe581a-79a6-d39d-38f9-646e4aefd98f">
      <Execution id="9e548e52-c576-4e2a-8693-b3e925a28c0b" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="Insert" />
    </UnitTest>
    <UnitTest name="InsertDeleteSelect" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="3e7f6762-f253-2395-a98b-b7024bc8f76d">
      <Execution id="62a1993c-ca10-4ff3-90ca-e9ecd7f55cda" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+OrmTransaction(Test.Orm+get_Source@10-1)" name="InsertDeleteSelect" />
    </UnitTest>
    <UnitTest name="Connect" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="5d408274-7e76-d306-80c5-5a9bfe39a193">
      <Execution id="e1183116-fbf0-4290-aba6-6fb2d86c79a7" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="Connect" />
    </UnitTest>
    <UnitTest name="Select" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="d9987b9d-24a0-d4c4-e4b0-295b5a496f9c">
      <Execution id="df57388c-cf23-4d4f-8495-7904d26edbf6" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="Select" />
    </UnitTest>
    <UnitTest name="ReaderWithTransaction" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="9798df95-32ca-8c71-56f5-d297f4317542">
      <Execution id="fce7754e-503a-43d8-8508-73b85558a465" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+OrmTransaction(Test.Orm+get_Source@11-2)" name="ReaderWithTransaction" />
    </UnitTest>
    <UnitTest name="DeleteWhere" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="6f25e22c-fb80-3b16-8268-1639c4107ef2">
      <Execution id="7167c810-374b-4bd3-976d-c0f9c5798d36" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="DeleteWhere" />
    </UnitTest>
    <UnitTest name="InsertUpdateSelect" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="36c067cb-46f5-9f5c-c278-1bb2ce6e133f">
      <Execution id="d0392b65-7177-4448-a0b5-98f04b2c1a8b" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+OrmTransaction(Test.Orm+get_Source@10-1)" name="InsertUpdateSelect" />
    </UnitTest>
    <UnitTest name="InsertUpdateSelect" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="e1d96324-45ef-45d2-544f-68bf57e5356c">
      <Execution id="f242229a-ccb1-437e-a408-d7fc5399b960" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+OrmTransaction(Test.Orm+get_Source@11-2)" name="InsertUpdateSelect" />
    </UnitTest>
    <UnitTest name="InsertSelect" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="4525c845-e5a6-179a-b7d8-7666e50f57e3">
      <Execution id="24d888b9-8504-4f7f-b16b-ef449e150fd7" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+OrmTransaction(Test.Orm+get_Source@11-2)" name="InsertSelect" />
    </UnitTest>
    <UnitTest name="Connect" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="0fa2da76-10fd-3535-9c31-82a6b7dc1dc6">
      <Execution id="fa77c489-993f-48aa-bf16-b759cba5f541" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="Connect" />
    </UnitTest>
    <UnitTest name="InsertDeleteSelect" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="d73ca3dd-6f0d-02ae-9b15-97da40bf6710">
      <Execution id="348ad010-b67d-4f94-9ab2-053ddd820990" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+OrmTransaction(Test.Orm+get_Source@11-2)" name="InsertDeleteSelect" />
    </UnitTest>
    <UnitTest name="UpdateMany" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="109960d2-3813-538d-c791-8f455002f0b6">
      <Execution id="3d8323b8-f6bf-482a-8ad7-4f8b084e7ad9" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="UpdateMany" />
    </UnitTest>
    <UnitTest name="InsertMany" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="808acbda-4118-700a-9ab5-75ef8abf7449">
      <Execution id="10ed324a-4183-48ec-a2c2-e0ac9483daa9" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="InsertMany" />
    </UnitTest>
    <UnitTest name="QueryBuild" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="61dcfb39-11fa-e241-4f87-9ef81d7da35f">
      <Execution id="e35c5ac0-9b7f-4f1e-b1ac-9eeea43c4db8" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="QueryBuild" />
    </UnitTest>
    <UnitTest name="InsertMany" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="9efe28fc-5719-572e-16c6-a90cc0bb8bcd">
      <Execution id="e19c1740-2bd2-47d7-8243-0ecd20b9074b" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="InsertMany" />
    </UnitTest>
    <UnitTest name="Reader" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="45a1c35a-206a-680b-7adf-97b4f1220fb1">
      <Execution id="f654feb7-457b-4866-b5c2-09643f739975" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="Reader" />
    </UnitTest>
    <UnitTest name="DeleteMany" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="15e7aaf0-1e10-0c65-15f8-df3a9c6f37ce">
      <Execution id="339a11bf-9164-47d9-afae-f97395c7acc9" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@11-2)" name="DeleteMany" />
    </UnitTest>
    <UnitTest name="TearDown" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="cc8f9a7d-2cf1-cea4-783c-8b829390949b">
      <Execution id="5791efe4-b626-43bf-bf3d-3aa5d00a190c" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="TearDown" />
    </UnitTest>
    <UnitTest name="Select" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="53d2384a-fbb2-a413-58be-1fd0675167cd">
      <Execution id="b011824f-9a49-4940-85a6-617af0894747" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="Select" />
    </UnitTest>
    <UnitTest name="Delete" storage="c:\hcrd\form\test\bin\debug\net7.0\test.dll" id="49a6d652-58bf-e834-bc8e-37de72d62c3c">
      <Execution id="51974415-2819-499e-9371-c4e537c05e79" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@10-1)" name="Delete" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="61dcfb39-11fa-e241-4f87-9ef81d7da35f" executionId="e35c5ac0-9b7f-4f1e-b1ac-9eeea43c4db8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="45fe581a-79a6-d39d-38f9-646e4aefd98f" executionId="9e548e52-c576-4e2a-8693-b3e925a28c0b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f9346500-1cf3-80bd-8353-bd565d17466d" executionId="ea519026-f0c5-48c0-93e9-a03c976dd00d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a90e932c-1181-7947-bd3f-cd4c26ae5c6c" executionId="f33a8a9e-0e10-47d3-a38e-9667f20704e8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="cc8f9a7d-2cf1-cea4-783c-8b829390949b" executionId="5791efe4-b626-43bf-bf3d-3aa5d00a190c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="aa5ad89d-4386-4bbe-356e-11e72bf7130c" executionId="f5917b65-b7e5-40db-a9fd-9e34fdb4b84b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0fa2da76-10fd-3535-9c31-82a6b7dc1dc6" executionId="fa77c489-993f-48aa-bf16-b759cba5f541" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="17b58aeb-30c9-6964-6c40-fbab11cb0ed7" executionId="919e9998-7d7a-482a-a501-6975a6d08058" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="64ceac3b-985e-80aa-2ebd-593c0fcb65a1" executionId="79534892-18ae-49f7-ad27-8d69f0fbc84b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="637f884a-918a-8683-bb6b-2e0f84146c18" executionId="48bb576d-88b4-48d8-aae0-b3b362d00c2e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="109960d2-3813-538d-c791-8f455002f0b6" executionId="3d8323b8-f6bf-482a-8ad7-4f8b084e7ad9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="32e05ec3-148e-77cd-f32a-bea700e74b04" executionId="cc66f60b-747e-467f-b333-e3c42bfbf8e7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e1d96324-45ef-45d2-544f-68bf57e5356c" executionId="f242229a-ccb1-437e-a408-d7fc5399b960" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5d408274-7e76-d306-80c5-5a9bfe39a193" executionId="e1183116-fbf0-4290-aba6-6fb2d86c79a7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="3e7f6762-f253-2395-a98b-b7024bc8f76d" executionId="62a1993c-ca10-4ff3-90ca-e9ecd7f55cda" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d8e33ed2-9bff-03c9-e97c-4b6122b57f5f" executionId="5bee26a5-e59b-447e-abd3-174c05b7e237" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9914cd5e-0327-22a6-d447-faa2be9ff7a1" executionId="1f137795-1d65-414a-a555-3d5d7293b202" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9efe28fc-5719-572e-16c6-a90cc0bb8bcd" executionId="e19c1740-2bd2-47d7-8243-0ecd20b9074b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4525c845-e5a6-179a-b7d8-7666e50f57e3" executionId="24d888b9-8504-4f7f-b16b-ef449e150fd7" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="644b827d-b769-3bd3-ee9c-d9b3a6561434" executionId="958af6f4-d3b5-4cb0-98d0-e9dd12e02f2a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="36c067cb-46f5-9f5c-c278-1bb2ce6e133f" executionId="d0392b65-7177-4448-a0b5-98f04b2c1a8b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6f25e22c-fb80-3b16-8268-1639c4107ef2" executionId="7167c810-374b-4bd3-976d-c0f9c5798d36" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="685fd3d2-6ac3-c066-f340-f935822e65eb" executionId="b7e53595-2183-45b6-8592-b02b6081fbb1" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d9987b9d-24a0-d4c4-e4b0-295b5a496f9c" executionId="df57388c-cf23-4d4f-8495-7904d26edbf6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="56e96ce4-50b6-5365-cfd5-b3ce8ae0fd29" executionId="9fbe3870-8850-49aa-9d25-8c525de35687" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="85caf85c-0ea4-3061-d9ac-49e696c000d2" executionId="455742d3-e0e7-452b-a418-dae6ef5a5cc8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d73ca3dd-6f0d-02ae-9b15-97da40bf6710" executionId="348ad010-b67d-4f94-9ab2-053ddd820990" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="45a1c35a-206a-680b-7adf-97b4f1220fb1" executionId="f654feb7-457b-4866-b5c2-09643f739975" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="40146aef-5e24-931c-f935-d8cb1c2a1a7b" executionId="9bfef608-207f-4385-bc81-b140f769f55f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="703d9e23-b2da-ec05-d434-5d080ae77160" executionId="2a2907de-224d-44b5-9537-c45ef7f4dbfc" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9798df95-32ca-8c71-56f5-d297f4317542" executionId="fce7754e-503a-43d8-8508-73b85558a465" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="49a6d652-58bf-e834-bc8e-37de72d62c3c" executionId="51974415-2819-499e-9371-c4e537c05e79" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="04fe663e-77f4-7638-3d23-56ab2a11f452" executionId="13ef694c-61fa-4e6f-be85-bbd685071fec" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="808acbda-4118-700a-9ab5-75ef8abf7449" executionId="10ed324a-4183-48ec-a2c2-e0ac9483daa9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="53d2384a-fbb2-a413-58be-1fd0675167cd" executionId="b011824f-9a49-4940-85a6-617af0894747" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="b2ee8ff5-43fd-9922-0a20-e7fbb2d8497e" executionId="884fcd25-2894-405f-b57e-861cb9b96072" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9c5af40b-4e18-c869-7f11-c793b0cd45f9" executionId="de0b108a-d243-4270-a661-d8272fe46779" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="15e7aaf0-1e10-0c65-15f8-df3a9c6f37ce" executionId="339a11bf-9164-47d9-afae-f97395c7acc9" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="38" executed="38" passed="28" failed="10" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>NUnit Adapter 4.4.0.0: Test execution started&#xD;
Running all tests in C:\hcrd\FORM\Test\bin\Debug\net7.0\Test.dll&#xD;
   NUnit3TestExecutor discovered 38 of 38 NUnit test cases using Current Discovery mode, Non-Explicit run&#xD;
Delete: facts: 0&#xD;
DeleteMany: 0&#xD;
DeleteWhere: facts: 0&#xD;
Reader: Error: Parameter count mismatch.&#xD;
SelectWhere: facts: Error: Object of type 'System.Int64' cannot be converted to type 'Microsoft.FSharp.Core.FSharpOption`1[System.Int64]'.&#xD;
TearDown: Transaction: None&#xD;
Update: facts: 1&#xD;
UpdateWhere: facts: 5&#xD;
Delete: facts: 0&#xD;
DeleteMany: 0&#xD;
DeleteWhere: facts: 0&#xD;
Reader: Error: Parameter count mismatch.&#xD;
SelectWhere: facts: Error: Object of type 'System.Int32' cannot be converted to type 'Microsoft.FSharp.Core.FSharpOption`1[System.Int64]'.&#xD;
TearDown: Transaction: None&#xD;
Update: facts: 1&#xD;
UpdateWhere: facts: 5&#xD;
ReaderWithTransaction: seq []&#xD;
ReaderWithTransaction: seq []&#xD;
NUnit Adapter 4.4.0.0: Test execution complete&#xD;
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:00.6561665-04:00">
        <Text>Contest: "Data Source=./test.db;"&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:00.7299040-04:00">
        <Text>Deleting...&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:00.7420563-04:00">
        <Text>Deleting Many...&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:00.7431620-04:00">
        <Text>Deleting Where...&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "indexId" = 1&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:00.7582657-04:00">
        <Text>Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "sqliteName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "2a1b1203-97b7-4183-be42-459a47141025"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:57:00 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:00.7696282-04:00">
        <Text>Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "sqliteName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:00.7769567-04:00">
        <Text>""Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId""&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:00.7884866-04:00">
        <Text>Reading...&#xD;
Query being generated:&#xD;
&#xD;
select * from "Fact"&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:00.8048565-04:00">
        <Text>Selecting All...&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId"&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:00.8501896-04:00">
        <Text>Selecting All...&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" limit 5&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:00.8504537-04:00">
        <Text>Selecting Where...&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where "maybeSomething" = 'true'&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:00.8506938-04:00">
        <Text>Updating...&#xD;
columns to update: seq&#xD;
  [{ Index = 0&#xD;
     IsKey = false&#xD;
     IsIndex = true&#xD;
     JoinOn = Some ("SubFact", "factId")&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "indexId"&#xD;
     QuotedSqlName = ""indexId""&#xD;
     FSharpName = "indexId"&#xD;
     Type = System.Int64&#xD;
     PropertyInfo = Int64 indexId }; { Index = 2&#xD;
                                       IsKey = false&#xD;
                                       IsIndex = false&#xD;
                                       JoinOn = None&#xD;
                                       Source = ""Fact""&#xD;
                                       QuotedSource = ""Fact""&#xD;
                                       SqlName = "sqliteName"&#xD;
                                       QuotedSqlName = ""sqliteName""&#xD;
                                       FSharpName = "name"&#xD;
                                       Type = System.String&#xD;
                                       PropertyInfo = System.String name };&#xD;
   { Index = 3&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "timeStamp"&#xD;
     QuotedSqlName = ""timeStamp""&#xD;
     FSharpName = "timeStamp"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String timeStamp };&#xD;
   { Index = 4&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "specialChar"&#xD;
     QuotedSqlName = ""specialChar""&#xD;
     FSharpName = "specialChar"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String specialChar }; ...]&#xD;
Query being generated:&#xD;
&#xD;
update "Fact" set "indexId" = @indexId, "sqliteName" = @name, "timeStamp" = @timeStamp, "specialChar" = @specialChar, "maybeSomething" = @maybeSomething, "sometimesNothing" = @sometimesNothing, "biteSize" = @biteSize where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:00.8739344-04:00">
        <Text>Updating many...&#xD;
columns to update: seq&#xD;
  [{ Index = 0&#xD;
     IsKey = false&#xD;
     IsIndex = true&#xD;
     JoinOn = Some ("SubFact", "factId")&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "indexId"&#xD;
     QuotedSqlName = ""indexId""&#xD;
     FSharpName = "indexId"&#xD;
     Type = System.Int64&#xD;
     PropertyInfo = Int64 indexId }; { Index = 2&#xD;
                                       IsKey = false&#xD;
                                       IsIndex = false&#xD;
                                       JoinOn = None&#xD;
                                       Source = ""Fact""&#xD;
                                       QuotedSource = ""Fact""&#xD;
                                       SqlName = "sqliteName"&#xD;
                                       QuotedSqlName = ""sqliteName""&#xD;
                                       FSharpName = "name"&#xD;
                                       Type = System.String&#xD;
                                       PropertyInfo = System.String name };&#xD;
   { Index = 3&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "timeStamp"&#xD;
     QuotedSqlName = ""timeStamp""&#xD;
     FSharpName = "timeStamp"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String timeStamp };&#xD;
   { Index = 4&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "specialChar"&#xD;
     QuotedSqlName = ""specialChar""&#xD;
     FSharpName = "specialChar"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String specialChar }; ...]&#xD;
Query being generated:&#xD;
&#xD;
update "Fact" set "indexId" = @indexId, "sqliteName" = @name, "timeStamp" = @timeStamp, "specialChar" = @specialChar, "maybeSomething" = @maybeSomething, "sometimesNothing" = @sometimesNothing, "biteSize" = @biteSize where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
Ok 2Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where id = 'ae9787b0-9f5c-4c19-a3f9-36bfd18a2660'&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:00.8863127-04:00">
        <Text>Updating...&#xD;
columns to update: seq&#xD;
  [{ Index = 0&#xD;
     IsKey = false&#xD;
     IsIndex = true&#xD;
     JoinOn = Some ("SubFact", "factId")&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "indexId"&#xD;
     QuotedSqlName = ""indexId""&#xD;
     FSharpName = "indexId"&#xD;
     Type = System.Int64&#xD;
     PropertyInfo = Int64 indexId }; { Index = 2&#xD;
                                       IsKey = false&#xD;
                                       IsIndex = false&#xD;
                                       JoinOn = None&#xD;
                                       Source = ""Fact""&#xD;
                                       QuotedSource = ""Fact""&#xD;
                                       SqlName = "sqliteName"&#xD;
                                       QuotedSqlName = ""sqliteName""&#xD;
                                       FSharpName = "name"&#xD;
                                       Type = System.String&#xD;
                                       PropertyInfo = System.String name };&#xD;
   { Index = 3&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "timeStamp"&#xD;
     QuotedSqlName = ""timeStamp""&#xD;
     FSharpName = "timeStamp"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String timeStamp };&#xD;
   { Index = 4&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "specialChar"&#xD;
     QuotedSqlName = ""specialChar""&#xD;
     FSharpName = "specialChar"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String specialChar }; ...]&#xD;
Query being generated:&#xD;
&#xD;
update "Fact" set "indexId" = @indexId, "sqliteName" = @name, "timeStamp" = @timeStamp, "specialChar" = @specialChar, "maybeSomething" = @maybeSomething, "sometimesNothing" = @sometimesNothing, "biteSize" = @biteSize where "indexId" = 1&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:01.1635077-04:00">
        <Text>Contest: "Data Source=./test.db;"&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:01.1823815-04:00">
        <Text>Deleting...&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:01.2282105-04:00">
        <Text>Deleting Many...&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:01.2417690-04:00">
        <Text>Deleting Where...&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "indexId" = 1&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:01.2591535-04:00">
        <Text>Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "psqlName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "f27036be-46c0-4cd8-968a-c57205a9fe5f"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:57:01 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:01.3311490-04:00">
        <Text>Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "psqlName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:01.3318049-04:00">
        <Text>""Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId""&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:01.3514780-04:00">
        <Text>Reading...&#xD;
Query being generated:&#xD;
&#xD;
select * from "Fact"&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:01.4703312-04:00">
        <Text>Selecting All...&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId"&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:01.5936382-04:00">
        <Text>Selecting All...&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" limit 5&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:01.7240962-04:00">
        <Text>Selecting Where...&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where "maybeSomething" = 'true'&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:01.8577850-04:00">
        <Text>Updating...&#xD;
columns to update: seq&#xD;
  [{ Index = 0&#xD;
     IsKey = false&#xD;
     IsIndex = true&#xD;
     JoinOn = Some ("SubFact", "factId")&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "indexId"&#xD;
     QuotedSqlName = ""indexId""&#xD;
     FSharpName = "indexId"&#xD;
     Type = System.Int64&#xD;
     PropertyInfo = Int64 indexId }; { Index = 2&#xD;
                                       IsKey = false&#xD;
                                       IsIndex = false&#xD;
                                       JoinOn = None&#xD;
                                       Source = ""Fact""&#xD;
                                       QuotedSource = ""Fact""&#xD;
                                       SqlName = "psqlName"&#xD;
                                       QuotedSqlName = ""psqlName""&#xD;
                                       FSharpName = "name"&#xD;
                                       Type = System.String&#xD;
                                       PropertyInfo = System.String name };&#xD;
   { Index = 3&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "timeStamp"&#xD;
     QuotedSqlName = ""timeStamp""&#xD;
     FSharpName = "timeStamp"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String timeStamp };&#xD;
   { Index = 4&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "specialChar"&#xD;
     QuotedSqlName = ""specialChar""&#xD;
     FSharpName = "specialChar"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String specialChar }; ...]&#xD;
Query being generated:&#xD;
&#xD;
update "Fact" set "indexId" = @indexId, "psqlName" = @name, "timeStamp" = @timeStamp, "specialChar" = @specialChar, "maybeSomething" = @maybeSomething, "sometimesNothing" = @sometimesNothing, "biteSize" = @biteSize where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:01.9196449-04:00">
        <Text>Updating many...&#xD;
columns to update: seq&#xD;
  [{ Index = 0&#xD;
     IsKey = false&#xD;
     IsIndex = true&#xD;
     JoinOn = Some ("SubFact", "factId")&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "indexId"&#xD;
     QuotedSqlName = ""indexId""&#xD;
     FSharpName = "indexId"&#xD;
     Type = System.Int64&#xD;
     PropertyInfo = Int64 indexId }; { Index = 2&#xD;
                                       IsKey = false&#xD;
                                       IsIndex = false&#xD;
                                       JoinOn = None&#xD;
                                       Source = ""Fact""&#xD;
                                       QuotedSource = ""Fact""&#xD;
                                       SqlName = "psqlName"&#xD;
                                       QuotedSqlName = ""psqlName""&#xD;
                                       FSharpName = "name"&#xD;
                                       Type = System.String&#xD;
                                       PropertyInfo = System.String name };&#xD;
   { Index = 3&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "timeStamp"&#xD;
     QuotedSqlName = ""timeStamp""&#xD;
     FSharpName = "timeStamp"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String timeStamp };&#xD;
   { Index = 4&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "specialChar"&#xD;
     QuotedSqlName = ""specialChar""&#xD;
     FSharpName = "specialChar"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String specialChar }; ...]&#xD;
Query being generated:&#xD;
&#xD;
update "Fact" set "indexId" = @indexId, "psqlName" = @name, "timeStamp" = @timeStamp, "specialChar" = @specialChar, "maybeSomething" = @maybeSomething, "sometimesNothing" = @sometimesNothing, "biteSize" = @biteSize where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
Ok 2Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where id = 'a0a2d91e-3e2b-482e-a942-e520139874ce'&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:02.0608581-04:00">
        <Text>Updating...&#xD;
columns to update: seq&#xD;
  [{ Index = 0&#xD;
     IsKey = false&#xD;
     IsIndex = true&#xD;
     JoinOn = Some ("SubFact", "factId")&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "indexId"&#xD;
     QuotedSqlName = ""indexId""&#xD;
     FSharpName = "indexId"&#xD;
     Type = System.Int64&#xD;
     PropertyInfo = Int64 indexId }; { Index = 2&#xD;
                                       IsKey = false&#xD;
                                       IsIndex = false&#xD;
                                       JoinOn = None&#xD;
                                       Source = ""Fact""&#xD;
                                       QuotedSource = ""Fact""&#xD;
                                       SqlName = "psqlName"&#xD;
                                       QuotedSqlName = ""psqlName""&#xD;
                                       FSharpName = "name"&#xD;
                                       Type = System.String&#xD;
                                       PropertyInfo = System.String name };&#xD;
   { Index = 3&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "timeStamp"&#xD;
     QuotedSqlName = ""timeStamp""&#xD;
     FSharpName = "timeStamp"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String timeStamp };&#xD;
   { Index = 4&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "specialChar"&#xD;
     QuotedSqlName = ""specialChar""&#xD;
     FSharpName = "specialChar"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String specialChar }; ...]&#xD;
Query being generated:&#xD;
&#xD;
update "Fact" set "indexId" = @indexId, "psqlName" = @name, "timeStamp" = @timeStamp, "specialChar" = @specialChar, "maybeSomething" = @maybeSomething, "sometimesNothing" = @sometimesNothing, "biteSize" = @biteSize where "indexId" = 1&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:02.0918656-04:00">
        <Text>Do we have a transaction? Some Microsoft.Data.Sqlite.SqliteTransaction&#xD;
Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "sqliteName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "3def2353-c849-4747-a17a-757ea24ddc2b"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:57:02 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where id = '3def2353-c849-4747-a17a-757ea24ddc2b'&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:57:02.1081539-04:00">
        <Text>Do we have a transaction? Some Microsoft.Data.Sqlite.SqliteTransaction&#xD;
Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "sqliteName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "be89970e-1d22-4da3-ae44-8eaa9cb060fd"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:57:02 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where id = 'be89970e-1d22-4da3-ae44-8eaa9cb060fd'&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:58:02.3222695-04:00">
        <Text>Exception when beginning transaction: Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 5: 'database is locked'.&#xD;
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)&#xD;
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader()&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteNonQuery()&#xD;
   at Microsoft.Data.Sqlite.SqliteConnectionExtensions.ExecuteNonQuery(SqliteConnection connection, String commandText, SqliteParameter[] parameters)&#xD;
   at Microsoft.Data.Sqlite.SqliteTransaction..ctor(SqliteConnection connection, IsolationLevel isolationLevel, Boolean deferred)&#xD;
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel, Boolean deferred)&#xD;
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel)&#xD;
   at Microsoft.Data.Sqlite.SqliteConnection.BeginDbTransaction(IsolationLevel isolationLevel)&#xD;
   at Test.Orm.OrmTransaction.InsertUpdateSelect() in C:\hcrd\FORM\Test\Orm.fs:line 357&#xD;
Do we have a transaction? None&#xD;
Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "sqliteName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "58f6e65d-2822-4987-a260-6bb2806b8309"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:57:32 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:58:32.4605524-04:00">
        <Text>Reading...&#xD;
Exception when beginning transaction: Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 5: 'database is locked'.&#xD;
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)&#xD;
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader()&#xD;
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteNonQuery()&#xD;
   at Microsoft.Data.Sqlite.SqliteConnectionExtensions.ExecuteNonQuery(SqliteConnection connection, String commandText, SqliteParameter[] parameters)&#xD;
   at Microsoft.Data.Sqlite.SqliteTransaction..ctor(SqliteConnection connection, IsolationLevel isolationLevel, Boolean deferred)&#xD;
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel, Boolean deferred)&#xD;
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel)&#xD;
   at Microsoft.Data.Sqlite.SqliteConnection.BeginDbTransaction(IsolationLevel isolationLevel)&#xD;
   at Test.Orm.OrmTransaction.ReaderWithTransaction() in C:\hcrd\FORM\Test\Orm.fs:line 390&#xD;
Query being generated:&#xD;
&#xD;
select * from "Fact"&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:58:32.5534550-04:00">
        <Text>Do we have a transaction? Some Npgsql.NpgsqlTransaction&#xD;
Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "psqlName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "a4a3f2a4-34a1-4d2d-8a50-50acbe48787d"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:58:32 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"&#xD;
Query being generated:&#xD;
&#xD;
delete from "Fact" where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where id = 'a4a3f2a4-34a1-4d2d-8a50-50acbe48787d'&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:58:32.7008010-04:00">
        <Text>Do we have a transaction? Some Npgsql.NpgsqlTransaction&#xD;
Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "psqlName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "dc56b1a7-3254-4146-8218-e4949c0b66fa"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:58:32 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where id = 'dc56b1a7-3254-4146-8218-e4949c0b66fa'&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:58:32.8627281-04:00">
        <Text>Do we have a transaction? Some Npgsql.NpgsqlTransaction&#xD;
Query being generated:&#xD;
&#xD;
insert into "Fact" ( "indexId", "id", "psqlName", "timeStamp", "specialChar", "maybeSomething", "sometimesNothing", "biteSize" ) values ( @indexId, @id, @name, @timeStamp, @specialChar, @maybeSomething, @sometimesNothing, @biteSize )&#xD;
&#xD;
&#xD;
&#xD;
Param count: 8&#xD;
Param 0 - "@indexId": 1L&#xD;
Param 1 - "@id": "9b133e28-5f16-44c8-8999-7f9bcfe6b91a"&#xD;
Param 2 - "@name": "Gerry McGuire"&#xD;
Param 3 - "@timeStamp": "8/9/2023 8:58:32 PM"&#xD;
Param 4 - "@specialChar": "Δ"&#xD;
Param 5 - "@maybeSomething": "true"&#xD;
Param 6 - "@sometimesNothing": 1L&#xD;
Param 7 - "@biteSize": "!aBite"&#xD;
columns to update: seq&#xD;
  [{ Index = 0&#xD;
     IsKey = false&#xD;
     IsIndex = true&#xD;
     JoinOn = Some ("SubFact", "factId")&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "indexId"&#xD;
     QuotedSqlName = ""indexId""&#xD;
     FSharpName = "indexId"&#xD;
     Type = System.Int64&#xD;
     PropertyInfo = Int64 indexId }; { Index = 2&#xD;
                                       IsKey = false&#xD;
                                       IsIndex = false&#xD;
                                       JoinOn = None&#xD;
                                       Source = ""Fact""&#xD;
                                       QuotedSource = ""Fact""&#xD;
                                       SqlName = "psqlName"&#xD;
                                       QuotedSqlName = ""psqlName""&#xD;
                                       FSharpName = "name"&#xD;
                                       Type = System.String&#xD;
                                       PropertyInfo = System.String name };&#xD;
   { Index = 3&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "timeStamp"&#xD;
     QuotedSqlName = ""timeStamp""&#xD;
     FSharpName = "timeStamp"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String timeStamp };&#xD;
   { Index = 4&#xD;
     IsKey = false&#xD;
     IsIndex = false&#xD;
     JoinOn = None&#xD;
     Source = ""Fact""&#xD;
     QuotedSource = ""Fact""&#xD;
     SqlName = "specialChar"&#xD;
     QuotedSqlName = ""specialChar""&#xD;
     FSharpName = "specialChar"&#xD;
     Type = System.String&#xD;
     PropertyInfo = System.String specialChar }; ...]&#xD;
Query being generated:&#xD;
&#xD;
update "Fact" set "indexId" = @indexId, "psqlName" = @name, "timeStamp" = @timeStamp, "specialChar" = @specialChar, "maybeSomething" = @maybeSomething, "sometimesNothing" = @sometimesNothing, "biteSize" = @biteSize where "Fact"."id" = @id&#xD;
&#xD;
&#xD;
&#xD;
Query being generated:&#xD;
&#xD;
select "Fact"."indexId", "Fact"."id", "Fact"."psqlName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId" where id = '9b133e28-5f16-44c8-8999-7f9bcfe6b91a'&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2023-08-09T20:58:33.0000487-04:00">
        <Text>Reading...&#xD;
Query being generated:&#xD;
&#xD;
select * from "Fact"&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>