<?xml version="1.0" encoding="utf-8"?>
<TestRun id="fc4da801-09da-48ff-ac46-1bab09f677b2" name="Evan@THE-BIG-RIG 2024-01-17 21:49:18" runUser="THE-BIG-RIG\Evan" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2024-01-17T21:49:18.3275744-05:00" queuing="2024-01-17T21:49:18.3275745-05:00" start="2024-01-17T21:49:16.4529370-05:00" finish="2024-01-17T21:49:18.9267592-05:00" />
  <TestSettings name="default" id="84a20b30-09ee-4593-ad4c-5737c6ccd3d8">
    <Deployment runDeploymentRoot="Evan_THE-BIG-RIG_2024-01-17_21_49_18" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="a08ee08a-3afb-4e85-84d5-d1868cc72d4d" testId="49949bd5-3b6a-5dec-46e3-6d7bc80063db" testName="UpdateMany" computerName="THE-BIG-RIG" duration="00:00:00.0102770" startTime="2024-01-17T21:49:18.8386132-05:00" endTime="2024-01-17T21:49:18.8488904-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a08ee08a-3afb-4e85-84d5-d1868cc72d4d">
      <Output>
        <StdOut>Updating many...&#xD;
Error&#xD;
  System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Pipe #1 input at line 184@184-1.Invoke(SqlMapping[] sqlMapping)</StdOut>
        <ErrorInfo>
          <Message>Couldn't verify update happened</Message>
          <StackTrace>   at Test.Orm.Orm.UpdateMany() in C:\hcrd\FORM\Test\Orm.fs:line 195&#xD;

1)    at Test.Orm.Orm.UpdateMany() in C:\hcrd\FORM\Test\Orm.fs:line 195&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="39af6761-e774-4a9e-9424-82b9c31abfc6" testId="f1bc8ba7-23aa-0bf7-f57c-9d3f0897ded3" testName="AsyncInsertMany" computerName="THE-BIG-RIG" duration="00:00:00.0969470" startTime="2024-01-17T21:49:18.1690378-05:00" endTime="2024-01-17T21:49:18.2659353-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="39af6761-e774-4a9e-9424-82b9c31abfc6">
      <Output>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Pipe #1 input at line 100@101.Invoke(Unit unitVar) in C:\hcrd\FORM\Test\Orm.fs:line 102</Message>
          <StackTrace>   at Test.Orm.Pipe #1 input at line 100@101.Invoke(Unit unitVar) in C:\hcrd\FORM\Test\Orm.fs:line 106&#xD;
   at Microsoft.FSharp.Control.AsyncPrimitives.CallThenInvoke[T,TResult](AsyncActivation`1 ctxt, TResult result1, FSharpFunc`2 part2) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 510&#xD;
   at Microsoft.FSharp.Control.Trampoline.Execute(FSharpFunc`2 firstAction) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 112&#xD;
--- End of stack trace from previous location ---&#xD;
   at Microsoft.FSharp.Control.AsyncResult`1.Commit() in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 454&#xD;
   at Microsoft.FSharp.Control.AsyncPrimitives.QueueAsyncAndWaitForResultSynchronously[a](CancellationToken token, FSharpAsync`1 computation, FSharpOption`1 timeout) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 1140&#xD;
   at Microsoft.FSharp.Control.AsyncPrimitives.RunSynchronously[T](CancellationToken cancellationToken, FSharpAsync`1 computation, FSharpOption`1 timeout) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 1167&#xD;
   at Microsoft.FSharp.Control.FSharpAsync.RunSynchronously[T](FSharpAsync`1 computation, FSharpOption`1 timeout, FSharpOption`1 cancellationToken) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 1511&#xD;
   at Test.Orm.Orm.AsyncInsertMany() in C:\hcrd\FORM\Test\Orm.fs:line 108&#xD;

1)    at Test.Orm.Pipe #1 input at line 100@101.Invoke(Unit unitVar) in C:\hcrd\FORM\Test\Orm.fs:line 106&#xD;
   at Microsoft.FSharp.Control.AsyncPrimitives.CallThenInvoke[T,TResult](AsyncActivation`1 ctxt, TResult result1, FSharpFunc`2 part2) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 510&#xD;
   at Microsoft.FSharp.Control.Trampoline.Execute(FSharpFunc`2 firstAction) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 112&#xD;
   at &lt;StartupCode$FSharp-Core&gt;.$Async.clo@193-15.Invoke(Object o) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 195&#xD;
   at System.Threading.QueueUserWorkItemCallback.Execute()&#xD;
   at System.Threading.ThreadPoolWorkQueue.Dispatch()&#xD;
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="b8f56cdb-00f3-4bce-9ef2-53066e16dfd3" testId="ecbfa7f4-606c-8a33-6833-bc55c934b06c" testName="Select" computerName="THE-BIG-RIG" duration="00:00:00.0020020" startTime="2024-01-17T21:49:18.2879143-05:00" endTime="2024-01-17T21:49:18.2899162-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="b8f56cdb-00f3-4bce-9ef2-53066e16dfd3">
      <Output>
        <StdOut>Selecting All...</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Orm.Select() in C:\hcrd\FORM\Test\Orm.fs:line 122</Message>
          <StackTrace>   at Test.Orm.Orm.Select() in C:\hcrd\FORM\Test\Orm.fs:line 126&#xD;

1)    at Test.Orm.Orm.Select() in C:\hcrd\FORM\Test\Orm.fs:line 126&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="258fb563-3ac0-4d14-8dd0-2eb611b02554" testId="c1bd3749-18fe-638e-fd6c-0740a2cecea1" testName="Delete" computerName="THE-BIG-RIG" duration="00:00:00.0038890" startTime="2024-01-17T21:49:18.2734086-05:00" endTime="2024-01-17T21:49:18.2772970-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="258fb563-3ac0-4d14-8dd0-2eb611b02554">
      <Output>
        <StdOut>Deleting...</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Delete@229.Invoke(SqlMapping[] sqlMapping)</Message>
          <StackTrace>   at Test.Orm.Orm.Delete() in C:\hcrd\FORM\Test\Orm.fs:line 232&#xD;

1)    at Test.Orm.Orm.Delete() in C:\hcrd\FORM\Test\Orm.fs:line 232&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ecfb2a85-1d76-4a28-b33c-833bc5cb9df5" testId="44fc6013-5a87-48db-0785-8e0ec4a64926" testName="SelectWhere" computerName="THE-BIG-RIG" duration="00:00:00.0020209" startTime="2024-01-17T21:49:18.2920327-05:00" endTime="2024-01-17T21:49:18.2940539-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ecfb2a85-1d76-4a28-b33c-833bc5cb9df5">
      <Output>
        <StdOut>Selecting Where...</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Orm.SelectWhere() in C:\hcrd\FORM\Test\Orm.fs:line 159</Message>
          <StackTrace>   at Test.Orm.Orm.SelectWhere() in C:\hcrd\FORM\Test\Orm.fs:line 162&#xD;

1)    at Test.Orm.Orm.SelectWhere() in C:\hcrd\FORM\Test\Orm.fs:line 162&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="5842f3cd-9820-4fa4-a113-e5b34594209f" testId="93033700-1e1e-b5ed-758b-8d37c3942f0a" testName="DeleteMany" computerName="THE-BIG-RIG" duration="00:00:00.0029880" startTime="2024-01-17T21:49:18.2773077-05:00" endTime="2024-01-17T21:49:18.2802955-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="5842f3cd-9820-4fa4-a113-e5b34594209f">
      <Output>
        <StdOut>Deleting Many...</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Pipe #1 input at line 253@253.Invoke(SqlMapping[] sqlMapping)</Message>
          <StackTrace>   at Test.Orm.Orm.DeleteMany() in C:\hcrd\FORM\Test\Orm.fs:line 256&#xD;

1)    at Test.Orm.Orm.DeleteMany() in C:\hcrd\FORM\Test\Orm.fs:line 256&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="a62c1ea9-8dc5-48de-b05a-8a1bb5dae70c" testId="fa2608cc-aa8e-1c0a-88db-ae33231aae85" testName="Insert" computerName="THE-BIG-RIG" duration="00:00:00.0020060" startTime="2024-01-17T21:49:18.2815548-05:00" endTime="2024-01-17T21:49:18.2835602-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="a62c1ea9-8dc5-48de-b05a-8a1bb5dae70c">
      <Output>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Orm.Insert() in C:\hcrd\FORM\Test\Orm.fs:line 85</Message>
          <StackTrace>   at Test.Orm.Orm.Insert() in C:\hcrd\FORM\Test\Orm.fs:line 87&#xD;

1)    at Test.Orm.Orm.Insert() in C:\hcrd\FORM\Test\Orm.fs:line 87&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e39c8f85-e807-4079-b65c-8d6e0d9f4566" testId="025127cc-2a80-9403-8e16-6ad30d56cac7" testName="Update" computerName="THE-BIG-RIG" duration="00:00:00.5437870" startTime="2024-01-17T21:49:18.2948037-05:00" endTime="2024-01-17T21:49:18.8385905-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e39c8f85-e807-4079-b65c-8d6e0d9f4566">
      <Output>
        <StdOut>Updating...</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Update@171-1.Invoke(SqlMapping[] sqlMapping)</Message>
          <StackTrace>   at Test.Orm.Orm.Update() in C:\hcrd\FORM\Test\Orm.fs:line 174&#xD;

1)    at Test.Orm.Orm.Update() in C:\hcrd\FORM\Test\Orm.fs:line 174&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="4774e83f-631b-472b-8b2f-4112b8e68256" testId="27a020ee-cecd-6b96-9b73-baf9c706a8b2" testName="InsertDeleteSelect" computerName="THE-BIG-RIG" duration="00:00:00.0043730" startTime="2024-01-17T21:49:18.8571034-05:00" endTime="2024-01-17T21:49:18.8614765-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="4774e83f-631b-472b-8b2f-4112b8e68256">
      <Output>
        <StdOut>Do we have a transaction? None</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.OrmTransaction.InsertDeleteSelect() in C:\hcrd\FORM\Test\Orm.fs:line 383</Message>
          <StackTrace>   at Test.Orm.OrmTransaction.InsertDeleteSelect() in C:\hcrd\FORM\Test\Orm.fs:line 400&#xD;

1)    at Test.Orm.OrmTransaction.InsertDeleteSelect() in C:\hcrd\FORM\Test\Orm.fs:line 400&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="30d1a3b0-8c30-439f-a314-3d56c3694e3c" testId="4d6ad5ac-f081-87bf-083e-492c86adcb99" testName="SelectLimit" computerName="THE-BIG-RIG" duration="00:00:00.0021000" startTime="2024-01-17T21:49:18.2899243-05:00" endTime="2024-01-17T21:49:18.2920239-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="30d1a3b0-8c30-439f-a314-3d56c3694e3c">
      <Output>
        <StdOut>Selecting All...</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Orm.SelectLimit() in C:\hcrd\FORM\Test\Orm.fs:line 149</Message>
          <StackTrace>   at Test.Orm.Orm.SelectLimit() in C:\hcrd\FORM\Test\Orm.fs:line 153&#xD;

1)    at Test.Orm.Orm.SelectLimit() in C:\hcrd\FORM\Test\Orm.fs:line 153&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="821168d2-5bc6-4e93-b349-e58196ae14d5" testId="a817f91e-3e11-c611-4169-fa061839e207" testName="Reader" computerName="THE-BIG-RIG" duration="00:00:00.0009550" startTime="2024-01-17T21:49:18.2869513-05:00" endTime="2024-01-17T21:49:18.2879059-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="821168d2-5bc6-4e93-b349-e58196ae14d5">
      <Output>
        <StdOut>Reading...</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Orm.Reader() in C:\hcrd\FORM\Test\Orm.fs:line 265</Message>
          <StackTrace>   at Test.Orm.Orm.Reader() in C:\hcrd\FORM\Test\Orm.fs:line 268&#xD;

1)    at Test.Orm.Orm.Reader() in C:\hcrd\FORM\Test\Orm.fs:line 268&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="94a4859f-b8ad-4d47-b2cc-404d285af05c" testId="fd6d3e98-d2d9-4674-78da-5c26f120e5bd" testName="Connect" computerName="THE-BIG-RIG" duration="00:00:00.0009760" startTime="2024-01-17T21:49:18.2724242-05:00" endTime="2024-01-17T21:49:18.2734001-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="94a4859f-b8ad-4d47-b2cc-404d285af05c">
      <Output>
        <StdOut>Contest: &lt;null&gt;</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Orm.Connect() in C:\hcrd\FORM\Test\Orm.fs:line 77</Message>
          <StackTrace>   at Test.Orm.Orm.Connect() in C:\hcrd\FORM\Test\Orm.fs:line 79&#xD;

1)    at Test.Orm.Orm.Connect() in C:\hcrd\FORM\Test\Orm.fs:line 79&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="179eaa85-7d5f-4ada-b529-e56a71198662" testId="9c7ecc6a-5190-daf2-0928-3a7cc789d273" testName="ReaderWithTransaction" computerName="THE-BIG-RIG" duration="00:00:00.0062249" startTime="2024-01-17T21:49:18.8716821-05:00" endTime="2024-01-17T21:49:18.8779071-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="179eaa85-7d5f-4ada-b529-e56a71198662">
      <Output>
        <StdOut>Reading...</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.OrmTransaction.ReaderWithTransaction() in C:\hcrd\FORM\Test\Orm.fs:line 442</Message>
          <StackTrace>   at Test.Orm.OrmTransaction.ReaderWithTransaction() in C:\hcrd\FORM\Test\Orm.fs:line 446&#xD;

1)    at Test.Orm.OrmTransaction.ReaderWithTransaction() in C:\hcrd\FORM\Test\Orm.fs:line 446&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="61401486-54c7-40d6-a297-8f14cb73344f" testId="a9bdf0c8-e1c4-a121-65dc-9f9618ca028c" testName="AsyncSelect" computerName="THE-BIG-RIG" duration="00:00:00.0056460" startTime="2024-01-17T21:49:18.2667613-05:00" endTime="2024-01-17T21:49:18.2724076-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="61401486-54c7-40d6-a297-8f14cb73344f">
      <Output>
        <StdOut>Asynchronously Selecting All...</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Pipe #1 input at line 132@133.Invoke(Unit unitVar) in C:\hcrd\FORM\Test\Orm.fs:line 133</Message>
          <StackTrace>   at Test.Orm.Pipe #1 input at line 132@133.Invoke(Unit unitVar) in C:\hcrd\FORM\Test\Orm.fs:line 141&#xD;
   at Microsoft.FSharp.Control.AsyncPrimitives.CallThenInvoke[T,TResult](AsyncActivation`1 ctxt, TResult result1, FSharpFunc`2 part2) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 510&#xD;
   at Microsoft.FSharp.Control.Trampoline.Execute(FSharpFunc`2 firstAction) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 112&#xD;
--- End of stack trace from previous location ---&#xD;
   at Microsoft.FSharp.Control.AsyncResult`1.Commit() in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 454&#xD;
   at Microsoft.FSharp.Control.AsyncPrimitives.QueueAsyncAndWaitForResultSynchronously[a](CancellationToken token, FSharpAsync`1 computation, FSharpOption`1 timeout) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 1140&#xD;
   at Microsoft.FSharp.Control.AsyncPrimitives.RunSynchronously[T](CancellationToken cancellationToken, FSharpAsync`1 computation, FSharpOption`1 timeout) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 1167&#xD;
   at Microsoft.FSharp.Control.FSharpAsync.RunSynchronously[T](FSharpAsync`1 computation, FSharpOption`1 timeout, FSharpOption`1 cancellationToken) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 1511&#xD;
   at Test.Orm.Orm.AsyncSelect() in C:\hcrd\FORM\Test\Orm.fs:line 143&#xD;

1)    at Test.Orm.Pipe #1 input at line 132@133.Invoke(Unit unitVar) in C:\hcrd\FORM\Test\Orm.fs:line 141&#xD;
   at Microsoft.FSharp.Control.AsyncPrimitives.CallThenInvoke[T,TResult](AsyncActivation`1 ctxt, TResult result1, FSharpFunc`2 part2) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 510&#xD;
   at Microsoft.FSharp.Control.Trampoline.Execute(FSharpFunc`2 firstAction) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 112&#xD;
   at &lt;StartupCode$FSharp-Core&gt;.$Async.clo@193-15.Invoke(Object o) in D:\a\_work\1\s\src\FSharp.Core\async.fs:line 195&#xD;
   at System.Threading.QueueUserWorkItemCallback.Execute()&#xD;
   at System.Threading.ThreadPoolWorkQueue.Dispatch()&#xD;
   at System.Threading.PortableThreadPool.WorkerThread.WorkerThreadStart()&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6c19c4dc-f602-4cd5-9c0d-dd83e01888e3" testId="8255985d-4bf6-4c65-22a8-d9a3a4e36414" testName="InsertUpdateSelect" computerName="THE-BIG-RIG" duration="00:00:00.0038490" startTime="2024-01-17T21:49:18.8678190-05:00" endTime="2024-01-17T21:49:18.8716686-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6c19c4dc-f602-4cd5-9c0d-dd83e01888e3">
      <Output>
        <StdOut>Do we have a transaction? None</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.OrmTransaction.InsertUpdateSelect() in C:\hcrd\FORM\Test\Orm.fs:line 414</Message>
          <StackTrace>   at Test.Orm.OrmTransaction.InsertUpdateSelect() in C:\hcrd\FORM\Test\Orm.fs:line 434&#xD;

1)    at Test.Orm.OrmTransaction.InsertUpdateSelect() in C:\hcrd\FORM\Test\Orm.fs:line 434&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="21665631-b8d4-442a-85dc-c6c2ad6dc42b" testId="f2916795-86e2-50c9-8f41-1f25fd077d63" testName="InsertSelect" computerName="THE-BIG-RIG" duration="00:00:00.0062220" startTime="2024-01-17T21:49:18.8614917-05:00" endTime="2024-01-17T21:49:18.8677136-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="21665631-b8d4-442a-85dc-c6c2ad6dc42b">
      <Output>
        <StdOut>Do we have a transaction? None</StdOut>
        <ErrorInfo>
          <Message>System.NullReferenceException : Object reference not set to an instance of an object.</Message>
          <StackTrace>   at Test.Orm.OrmTransaction.InsertSelect() in C:\hcrd\FORM\Test\Orm.fs:line 369&#xD;
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)&#xD;
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cd871e87-1794-4661-9871-efab8bf0d7a3" testId="a55d8eac-8351-7c50-fd47-709e53248e16" testName="QueryBuild" computerName="THE-BIG-RIG" duration="00:00:00.0014600" startTime="2024-01-17T21:49:18.2854775-05:00" endTime="2024-01-17T21:49:18.2869369-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cd871e87-1794-4661-9871-efab8bf0d7a3">
      <Output>
        <StdOut>""Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId""</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="3c728bf6-606e-4a22-a5f0-d949ce9f9cf8" testId="62e1b182-b79a-5d79-f0a2-e977fc8a0813" testName="UpdateWhere" computerName="THE-BIG-RIG" duration="00:00:00.0048650" startTime="2024-01-17T21:49:18.8493117-05:00" endTime="2024-01-17T21:49:18.8541767-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="3c728bf6-606e-4a22-a5f0-d949ce9f9cf8">
      <Output>
        <StdOut>Updating...</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Orm.UpdateWhere() in C:\hcrd\FORM\Test\Orm.fs:line 217</Message>
          <StackTrace>   at Test.Orm.Orm.UpdateWhere() in C:\hcrd\FORM\Test\Orm.fs:line 220&#xD;

1)    at Test.Orm.Orm.UpdateWhere() in C:\hcrd\FORM\Test\Orm.fs:line 220&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="17ad4cbf-f847-4927-af3b-ea3bee527f90" testId="5077475e-2251-e1bc-6fbe-eb1d03ba5605" testName="InsertMany" computerName="THE-BIG-RIG" duration="00:00:00.0018940" startTime="2024-01-17T21:49:18.2835691-05:00" endTime="2024-01-17T21:49:18.2854631-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="17ad4cbf-f847-4927-af3b-ea3bee527f90">
      <Output>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Orm.InsertMany() in C:\hcrd\FORM\Test\Orm.fs:line 93</Message>
          <StackTrace>   at Test.Orm.Orm.InsertMany() in C:\hcrd\FORM\Test\Orm.fs:line 95&#xD;

1)    at Test.Orm.Orm.InsertMany() in C:\hcrd\FORM\Test\Orm.fs:line 95&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ebea78fc-616d-432d-b055-265ff2d37016" testId="6de79846-75b8-e06c-355b-070b1a8ab7ff" testName="TearDown" computerName="THE-BIG-RIG" duration="00:00:00.0007320" startTime="2024-01-17T21:49:18.2940621-05:00" endTime="2024-01-17T21:49:18.2947941-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ebea78fc-616d-432d-b055-265ff2d37016">
      <Output>
        <StdOut>Transaction: None</StdOut>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="f70c69d5-01a5-4a4d-b051-1a03fcf0155f" testId="ae2b178e-a9d2-4ec8-2c28-123086c7d075" testName="DeleteWhere" computerName="THE-BIG-RIG" duration="00:00:00.0012400" startTime="2024-01-17T21:49:18.2803059-05:00" endTime="2024-01-17T21:49:18.2815459-05:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f70c69d5-01a5-4a4d-b051-1a03fcf0155f">
      <Output>
        <StdOut>Deleting Where...</StdOut>
        <ErrorInfo>
          <Message>System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Orm.DeleteWhere() in C:\hcrd\FORM\Test\Orm.fs:line 240</Message>
          <StackTrace>   at Test.Orm.Orm.DeleteWhere() in C:\hcrd\FORM\Test\Orm.fs:line 243&#xD;

1)    at Test.Orm.Orm.DeleteWhere() in C:\hcrd\FORM\Test\Orm.fs:line 243&#xD;

</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="DeleteWhere" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="ae2b178e-a9d2-4ec8-2c28-123086c7d075">
      <Execution id="f70c69d5-01a5-4a4d-b051-1a03fcf0155f" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="DeleteWhere" />
    </UnitTest>
    <UnitTest name="SelectWhere" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="44fc6013-5a87-48db-0785-8e0ec4a64926">
      <Execution id="ecfb2a85-1d76-4a28-b33c-833bc5cb9df5" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="SelectWhere" />
    </UnitTest>
    <UnitTest name="Delete" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="c1bd3749-18fe-638e-fd6c-0740a2cecea1">
      <Execution id="258fb563-3ac0-4d14-8dd0-2eb611b02554" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="Delete" />
    </UnitTest>
    <UnitTest name="Reader" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="a817f91e-3e11-c611-4169-fa061839e207">
      <Execution id="821168d2-5bc6-4e93-b349-e58196ae14d5" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="Reader" />
    </UnitTest>
    <UnitTest name="UpdateWhere" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="62e1b182-b79a-5d79-f0a2-e977fc8a0813">
      <Execution id="3c728bf6-606e-4a22-a5f0-d949ce9f9cf8" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="UpdateWhere" />
    </UnitTest>
    <UnitTest name="InsertMany" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="5077475e-2251-e1bc-6fbe-eb1d03ba5605">
      <Execution id="17ad4cbf-f847-4927-af3b-ea3bee527f90" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="InsertMany" />
    </UnitTest>
    <UnitTest name="Select" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="ecbfa7f4-606c-8a33-6833-bc55c934b06c">
      <Execution id="b8f56cdb-00f3-4bce-9ef2-53066e16dfd3" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="Select" />
    </UnitTest>
    <UnitTest name="AsyncInsertMany" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="f1bc8ba7-23aa-0bf7-f57c-9d3f0897ded3">
      <Execution id="39af6761-e774-4a9e-9424-82b9c31abfc6" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="AsyncInsertMany" />
    </UnitTest>
    <UnitTest name="SelectLimit" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="4d6ad5ac-f081-87bf-083e-492c86adcb99">
      <Execution id="30d1a3b0-8c30-439f-a314-3d56c3694e3c" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="SelectLimit" />
    </UnitTest>
    <UnitTest name="QueryBuild" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="a55d8eac-8351-7c50-fd47-709e53248e16">
      <Execution id="cd871e87-1794-4661-9871-efab8bf0d7a3" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="QueryBuild" />
    </UnitTest>
    <UnitTest name="ReaderWithTransaction" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="9c7ecc6a-5190-daf2-0928-3a7cc789d273">
      <Execution id="179eaa85-7d5f-4ada-b529-e56a71198662" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+OrmTransaction(Test.Orm+get_Source@13-1)" name="ReaderWithTransaction" />
    </UnitTest>
    <UnitTest name="Connect" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="fd6d3e98-d2d9-4674-78da-5c26f120e5bd">
      <Execution id="94a4859f-b8ad-4d47-b2cc-404d285af05c" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="Connect" />
    </UnitTest>
    <UnitTest name="InsertSelect" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="f2916795-86e2-50c9-8f41-1f25fd077d63">
      <Execution id="21665631-b8d4-442a-85dc-c6c2ad6dc42b" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+OrmTransaction(Test.Orm+get_Source@13-1)" name="InsertSelect" />
    </UnitTest>
    <UnitTest name="InsertDeleteSelect" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="27a020ee-cecd-6b96-9b73-baf9c706a8b2">
      <Execution id="4774e83f-631b-472b-8b2f-4112b8e68256" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+OrmTransaction(Test.Orm+get_Source@13-1)" name="InsertDeleteSelect" />
    </UnitTest>
    <UnitTest name="AsyncSelect" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="a9bdf0c8-e1c4-a121-65dc-9f9618ca028c">
      <Execution id="61401486-54c7-40d6-a297-8f14cb73344f" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="AsyncSelect" />
    </UnitTest>
    <UnitTest name="TearDown" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="6de79846-75b8-e06c-355b-070b1a8ab7ff">
      <Execution id="ebea78fc-616d-432d-b055-265ff2d37016" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="TearDown" />
    </UnitTest>
    <UnitTest name="Update" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="025127cc-2a80-9403-8e16-6ad30d56cac7">
      <Execution id="e39c8f85-e807-4079-b65c-8d6e0d9f4566" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="Update" />
    </UnitTest>
    <UnitTest name="DeleteMany" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="93033700-1e1e-b5ed-758b-8d37c3942f0a">
      <Execution id="5842f3cd-9820-4fa4-a113-e5b34594209f" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="DeleteMany" />
    </UnitTest>
    <UnitTest name="UpdateMany" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="49949bd5-3b6a-5dec-46e3-6d7bc80063db">
      <Execution id="a08ee08a-3afb-4e85-84d5-d1868cc72d4d" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="UpdateMany" />
    </UnitTest>
    <UnitTest name="Insert" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="fa2608cc-aa8e-1c0a-88db-ae33231aae85">
      <Execution id="a62c1ea9-8dc5-48de-b05a-8a1bb5dae70c" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+Orm(Test.Orm+get_Source@13-1)" name="Insert" />
    </UnitTest>
    <UnitTest name="InsertUpdateSelect" storage="c:\hcrd\form\test\bin\debug\net8.0\test.dll" id="8255985d-4bf6-4c65-22a8-d9a3a4e36414">
      <Execution id="6c19c4dc-f602-4cd5-9c0d-dd83e01888e3" />
      <TestMethod codeBase="C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll" adapterTypeName="executor://nunit3testexecutor/" className="Test.Orm+OrmTransaction(Test.Orm+get_Source@13-1)" name="InsertUpdateSelect" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="49949bd5-3b6a-5dec-46e3-6d7bc80063db" executionId="a08ee08a-3afb-4e85-84d5-d1868cc72d4d" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f1bc8ba7-23aa-0bf7-f57c-9d3f0897ded3" executionId="39af6761-e774-4a9e-9424-82b9c31abfc6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ecbfa7f4-606c-8a33-6833-bc55c934b06c" executionId="b8f56cdb-00f3-4bce-9ef2-53066e16dfd3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="c1bd3749-18fe-638e-fd6c-0740a2cecea1" executionId="258fb563-3ac0-4d14-8dd0-2eb611b02554" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="44fc6013-5a87-48db-0785-8e0ec4a64926" executionId="ecfb2a85-1d76-4a28-b33c-833bc5cb9df5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="93033700-1e1e-b5ed-758b-8d37c3942f0a" executionId="5842f3cd-9820-4fa4-a113-e5b34594209f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fa2608cc-aa8e-1c0a-88db-ae33231aae85" executionId="a62c1ea9-8dc5-48de-b05a-8a1bb5dae70c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="025127cc-2a80-9403-8e16-6ad30d56cac7" executionId="e39c8f85-e807-4079-b65c-8d6e0d9f4566" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="27a020ee-cecd-6b96-9b73-baf9c706a8b2" executionId="4774e83f-631b-472b-8b2f-4112b8e68256" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4d6ad5ac-f081-87bf-083e-492c86adcb99" executionId="30d1a3b0-8c30-439f-a314-3d56c3694e3c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a817f91e-3e11-c611-4169-fa061839e207" executionId="821168d2-5bc6-4e93-b349-e58196ae14d5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="fd6d3e98-d2d9-4674-78da-5c26f120e5bd" executionId="94a4859f-b8ad-4d47-b2cc-404d285af05c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9c7ecc6a-5190-daf2-0928-3a7cc789d273" executionId="179eaa85-7d5f-4ada-b529-e56a71198662" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a9bdf0c8-e1c4-a121-65dc-9f9618ca028c" executionId="61401486-54c7-40d6-a297-8f14cb73344f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8255985d-4bf6-4c65-22a8-d9a3a4e36414" executionId="6c19c4dc-f602-4cd5-9c0d-dd83e01888e3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="f2916795-86e2-50c9-8f41-1f25fd077d63" executionId="21665631-b8d4-442a-85dc-c6c2ad6dc42b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="a55d8eac-8351-7c50-fd47-709e53248e16" executionId="cd871e87-1794-4661-9871-efab8bf0d7a3" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="62e1b182-b79a-5d79-f0a2-e977fc8a0813" executionId="3c728bf6-606e-4a22-a5f0-d949ce9f9cf8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="5077475e-2251-e1bc-6fbe-eb1d03ba5605" executionId="17ad4cbf-f847-4927-af3b-ea3bee527f90" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6de79846-75b8-e06c-355b-070b1a8ab7ff" executionId="ebea78fc-616d-432d-b055-265ff2d37016" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ae2b178e-a9d2-4ec8-2c28-123086c7d075" executionId="f70c69d5-01a5-4a4d-b051-1a03fcf0155f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="21" executed="21" passed="2" failed="19" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>NUnit Adapter 4.4.0.0: Test execution started&#xD;
Running all tests in C:\hcrd\FORM\Test\bin\Debug\net8.0\Test.dll&#xD;
   NUnit3TestExecutor discovered 21 of 21 NUnit test cases using Current Discovery mode, Non-Explicit run&#xD;
TearDown: Transaction: None&#xD;
NUnit Adapter 4.4.0.0: Test execution complete&#xD;
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.2828770-05:00">
        <Text>Asynchronously Selecting All...&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.2833907-05:00">
        <Text>Contest: &lt;null&gt;&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.2838164-05:00">
        <Text>Deleting...&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.2840768-05:00">
        <Text>Deleting Many...&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.2842575-05:00">
        <Text>Deleting Where...&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.2872076-05:00">
        <Text>""Fact"."indexId", "Fact"."id", "Fact"."sqliteName", "Fact"."timeStamp", "Fact"."specialChar", "Fact"."maybeSomething", "Fact"."sometimesNothing", "Fact"."biteSize", "SubFact"."subFact" from "Fact" left join "SubFact" on "SubFact"."factId" = "Fact"."indexId""&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.3432158-05:00">
        <Text>Reading...&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.3433741-05:00">
        <Text>Selecting All...&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.3435307-05:00">
        <Text>Selecting All...&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.3436983-05:00">
        <Text>Selecting Where...&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.8391867-05:00">
        <Text>Updating...&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.8493685-05:00">
        <Text>Updating many...&#xD;
Error&#xD;
  System.ArgumentException: Invalid ConnectionString format, cannot parse: string value to split cannot be null&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean allowNameOnly)&#xD;
   at System.Data.SQLite.SQLiteConnection.ParseConnectionString(SQLiteConnection connection, String connectionString, Boolean parseViaFramework, Boolean allowNameOnly, Boolean strict)&#xD;
   at System.Data.SQLite.SQLiteConnection.Open()&#xD;
   at Test.Orm.Pipe #1 input at line 184@184-1.Invoke(SqlMapping[] sqlMapping)</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.8546424-05:00">
        <Text>Updating...&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.8618894-05:00">
        <Text>Do we have a transaction? None&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.8763502-05:00">
        <Text>Do we have a transaction? None&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.8765169-05:00">
        <Text>Do we have a transaction? None&#xD;
</Text>
      </RunInfo>
      <RunInfo computerName="THE-BIG-RIG" outcome="Warning" timestamp="2024-01-17T21:49:18.8789760-05:00">
        <Text>Reading...&#xD;
</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>